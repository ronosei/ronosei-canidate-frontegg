{
  "openapi": "3.0.0",
  "paths": {
    "/resources/applications/v1/{appId}/users": {
      "get": {
        "operationId": "ApplicationsControllerV1_getUsersForApplication",
        "summary": "Get users for application",
        "description": "This route gets users for an application.",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1/{userId}/apps": {
      "get": {
        "operationId": "ApplicationsControllerV1_getApplicationsForUser",
        "summary": "Get applications for user",
        "description": "This route gets applications for a user.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1/users-apps": {
      "get": {
        "operationId": "ApplicationsControllerV1_getApplicationsForMultipleUsers",
        "summary": "Get applications for multiple users",
        "description": "This route gets applications for multiple users.",
        "parameters": [
          {
            "name": "userIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "appIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "userId",
                      "appIds"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1/apps-users": {
      "get": {
        "operationId": "ApplicationsControllerV1_getUsersForMultipleApplications",
        "summary": "Get users for multiple applications",
        "description": "This route gets users for multiple applications.",
        "parameters": [
          {
            "name": "appIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      },
                      "userIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "appId",
                      "userIds"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1": {
      "post": {
        "operationId": "ApplicationsControllerV1_assignUsersToApplication",
        "summary": "Assign users to application",
        "description": "This route assigns users to an application.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "appId",
                  "tenantId",
                  "userIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      },
                      "userTenantId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "appId",
                      "userTenantId",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      },
                      "userTenantId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "appId",
                      "userTenantId",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      },
      "delete": {
        "operationId": "ApplicationsControllerV1_unassignUsersFromApplication",
        "summary": "Unassign users from application",
        "description": "This route unassigns users from an application.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "appId",
                  "tenantId",
                  "userIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1/apps-user": {
      "post": {
        "operationId": "ApplicationsControllerV1_assignUserToMultipleApplications",
        "summary": "Assign user to multiple applications",
        "description": "This route assigns user to multiple applications.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "appIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "userId",
                  "tenantId",
                  "appIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      },
                      "userTenantId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "appId",
                      "userTenantId",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appId": {
                        "type": "string"
                      },
                      "userTenantId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "appId",
                      "userTenantId",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/v1/user-apps": {
      "delete": {
        "operationId": "ApplicationsControllerV1_unassignUserFromMultipleApplications",
        "summary": "Unassign user from multiple applications",
        "description": "This route unassigns user from multiple applications.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "appIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "userId",
                  "tenantId",
                  "appIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/applications/user-tenants/active/v1": {
      "get": {
        "operationId": "ApplicationsActiveUserTenantsControllerV1_getUserApplicationActiveTenants",
        "summary": "Get user active tenants in applications",
        "description": "This route gets the active user tenants for an application.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applicationActiveTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "applicationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "applicationId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "applicationActiveTenants"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      },
      "put": {
        "operationId": "ApplicationsActiveUserTenantsControllerV1_switchUserApplicationActiveTenant",
        "summary": "Switch users active tenant in applications",
        "description": "This route updates the active user tenants for an application.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activeApplicationTenants": {
                    "description": "List of applications and tenants to set as active, for user",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Desired application to set active tenant in"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Desired tenant to set as active tenant for user in application"
                        }
                      },
                      "required": [
                        "applicationId",
                        "tenantId"
                      ]
                    }
                  }
                },
                "required": [
                  "activeApplicationTenants"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Applications-management | Users"
        ]
      }
    },
    "/resources/auth/v2/api-token": {
      "post": {
        "operationId": "AuthenticationApiTokenControllerV2_authApiToken",
        "summary": "Authenticate using API token",
        "description": "This route authenticates a tenant’s or user’s API token. The clientId and secret key are in Admin Portal ➜ API Tokens. Send these values as params in the POST body and authenticate to your Frontegg domain by replacing api.frontegg.com with your Frontegg domain.</br>**NOTE**: This route enforces(by default) a rotation mechanism for refresh tokens associated with the API token. It limits each token to a maximum of 100 refresh tokens simultaneously. When a client authenticates using the same API token for the 101th time, the earliest refresh token is automatically invalidated.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string"
                  },
                  "secret": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "secret"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access_token",
                    "refresh_token",
                    "expires_in",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | API token"
        ]
      }
    },
    "/resources/auth/v2/api-token/token/refresh": {
      "post": {
        "operationId": "AuthenticationApiTokenControllerV2_refreshToken",
        "summary": "Refresh API token",
        "description": "This route refreshes a JWT using the refresh token value. If the refresh token is valid, the route returns a new JWT and refresh token. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access_token",
                    "refresh_token",
                    "expires_in",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | API token"
        ]
      }
    },
    "/resources/auth/v1/user": {
      "post": {
        "operationId": "AuthenticatioAuthenticationControllerV1_authenticateLocalUser",
        "summary": "Authenticate user with password",
        "description": "This route authenticates a local user using email and password. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Optionally, send login information for the user as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login.",
        "parameters": [
          {
            "name": "frontegg-vendor-host",
            "in": "header",
            "description": "The vendor host domain",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | General"
        ]
      }
    },
    "/resources/auth/v1/user/token/refresh": {
      "post": {
        "operationId": "AuthenticatioAuthenticationControllerV1_refreshToken",
        "summary": "Refresh user JWT token ",
        "description": "This route refreshes a JWT based on the refresh token expiration time. If the refresh token is valid, the route returns a new JWT and refresh token. Please note that the route expects the refresh cookie of the logged in user as well. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Configure your JWT settings in the Frontegg Portal.",
        "parameters": [
          {
            "name": "frontegg-vendor-host",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | General"
        ]
      }
    },
    "/resources/auth/v1/logout": {
      "post": {
        "operationId": "AuthenticatioAuthenticationControllerV1_logout",
        "summary": "Logout user",
        "description": "This route logs out a user using the refresh token that is passed as a cookie. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This route is designed for Frontegg embedded login or integrations that use only Frontegg APIs",
        "parameters": [
          {
            "name": "frontegg-vendor-host",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | General"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/recover": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_recoverMfa",
        "summary": "Recover MFA",
        "description": "This route recovers MFA for a non logged-in user. Send the user’s email and a recovery code as params in the POST body. The recovery code comes from the MFA authenticator app when you set up MFA.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recoveryCode": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "recoveryCode",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/disable": {
      "post": {
        "operationId": "UsersMfaControllerV1_disableAuthAppMfa",
        "summary": "Disable authenticator app MFA",
        "description": "This route disables MFA enrollment for a logged-in user for a specific tenant. Send the **`frontegg-user-id`** header to declare which user. The MFA token should be obtained from the authenticator app. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "deprecated": true,
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/authenticator/{deviceId}/disable/verify": {
      "post": {
        "operationId": "UsersMfaControllerV1_disableAuthenticatorMfa",
        "summary": "Disable authenticator app MFA",
        "description": "This route disables MFA enrollment for a logged-in user for a specific tenant. Send the **`frontegg-user-id`** header to declare which user. The MFA token should be obtained from the authenticator app. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/sms/{deviceId}/disable": {
      "post": {
        "operationId": "UsersMfaControllerV1_preDisableSMSMfa",
        "summary": "Pre-disable SMS MFA",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/sms/{deviceId}/disable/verify": {
      "post": {
        "operationId": "UsersMfaControllerV1_disableSMSMfa",
        "summary": "Disable SMS MFA",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otcToken": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "otcToken",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_verifyAuthenticatorMfaCode",
        "summary": "Verify MFA using code from authenticator app",
        "description": "This route verifies the MFA code from an authenticator app. Send the **`frontegg-vendor-host`** as a header. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send information required for MFA in the POST body. The `value` is the service name from your Authentication Settings in the Frontegg Portal. The MFA token is from the authenticator app.",
        "deprecated": true,
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "value",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/emailcode": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preVerifyEmailOtcMfa",
        "summary": "Request verify MFA using email code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mfaToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/emailcode/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_verifyEmailOtcMfa",
        "summary": "Verify MFA using email code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otcToken": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "otcToken",
                  "code",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/authenticator/enroll": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preEnrollAuthenticatorMfa",
        "summary": "Pre enroll MFA using Authenticator App",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mfaToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/authenticator/enroll/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_enrollAuthenticatorMfa",
        "summary": "Enroll MFA using Authenticator App",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "token",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/authenticator/{deviceId}/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_verifyAuthenticatorMfa",
        "summary": "Verify MFA using authenticator app",
        "description": "This route verifies MFA as part of the authentication process. Send the **`frontegg-vendor-host`** as a header. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send information required for MFA in the POST body. The `value` is the service name from your Authentication Settings in the Frontegg Portal. The MFA token is from the authenticator app.",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "value",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/sms/enroll": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preEnrollSmsMfa",
        "summary": "Pre-enroll MFA using sms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "phoneNumberRegexp"
                  }
                },
                "required": [
                  "phoneNumber"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/sms/enroll/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_enrollSmsMfa",
        "summary": "Enroll MFA using sms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otcToken": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "otcToken",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/sms/{deviceId}": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preVerifySmsMfa",
        "summary": "Request to verify MFA using sms",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mfaToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/sms/{deviceId}/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_verifySmsMfa",
        "summary": "Verify MFA using sms",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otcToken": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "otcToken",
                  "code",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/webauthn/enroll": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preEnrollWebauthnMfa",
        "summary": "Pre enroll MFA using WebAuthN",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mfaToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/webauthn/enroll/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_enrollWebauthnMfa",
        "summary": "Enroll MFA using WebAuthN",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceType": {
                    "type": "string",
                    "enum": [
                      "Platform",
                      "CrossPlatform"
                    ]
                  },
                  "webauthnToken": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "response": {
                        "type": "object",
                        "properties": {
                          "clientDataJSON": {
                            "type": "string"
                          },
                          "attestationObject": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "clientDataJSON",
                          "attestationObject"
                        ]
                      },
                      "deviceType": {
                        "type": "string",
                        "enum": [
                          "Platform",
                          "CrossPlatform"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "response"
                    ]
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "deviceType",
                  "webauthnToken",
                  "options",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/webauthn/{deviceId}": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_preVerifyWebauthnMfa",
        "summary": "Request verify MFA using WebAuthN",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mfaToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/user/mfa/webauthn/{deviceId}/verify": {
      "post": {
        "operationId": "AuthenticationMFAControllerV1_verifyWebauthnMfa",
        "summary": "Verify MFA using webauthn",
        "parameters": [
          {
            "name": "deviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webauthnToken": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "response": {
                        "type": "object",
                        "properties": {
                          "clientDataJSON": {
                            "type": "string"
                          },
                          "authenticatorData": {
                            "type": "string"
                          },
                          "signature": {
                            "type": "string"
                          },
                          "userHandle": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "clientDataJSON",
                          "authenticatorData",
                          "signature",
                          "userHandle"
                        ]
                      },
                      "recaptchaToken": {
                        "type": "string"
                      },
                      "invitationToken": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "response"
                    ]
                  },
                  "mfaToken": {
                    "type": "string"
                  },
                  "rememberDevice": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "webauthnToken",
                  "options",
                  "mfaToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/configurations/v1/mfa-policy/allow-remember-device": {
      "get": {
        "operationId": "SecurityPolicyController_checkIfAllowToRememberDevice",
        "summary": "Check if remember device allowed",
        "description": "This route checks if remember device is allowed for all tenants. To check if remember device is allowed for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. Get the mfa token from the authenticator app and send it as a query params.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mfaToken",
            "required": true,
            "in": "query",
            "description": "MFA token from the response body of the first factor authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/enroll": {
      "post": {
        "operationId": "UsersMfaControllerV1_enrollAuthAppMfa",
        "summary": "Enroll authenticator app MFA",
        "description": "This route enrolls MFA for a logged-in user for a specific tenant. Send the **`frontegg-user-id`** header to declare which user. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "deprecated": true,
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "qrCode": {
                      "type": "string",
                      "description": "QR code to be verified by authenticator app"
                    }
                  },
                  "required": [
                    "qrCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/authenticator/enroll": {
      "post": {
        "operationId": "UsersMfaControllerV1_enrollAuthenticatorMfa",
        "summary": "Enroll authenticator app MFA",
        "description": "This route enrolls MFA for a logged-in user for a specific tenant. Send the **`frontegg-user-id`** header to declare which user. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "qrCode": {
                      "type": "string",
                      "description": "QR code to be verified by authenticator app"
                    }
                  },
                  "required": [
                    "qrCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/enroll/verify": {
      "post": {
        "operationId": "UsersMfaControllerV1_verifyAuthAppMfaEnrollment",
        "summary": "Verify authenticator app MFA enrollment",
        "description": "This route verifies MFA enrollment using a QR code. Send the **`frontegg-user-id`** header to declare which user. Send information required for MFA in the POST body. The MFA token should be obtained from the authenticator app after scanning the QR code received . A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "deprecated": true,
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recoveryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "recoveryCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/authenticator/enroll/verify": {
      "post": {
        "operationId": "UsersMfaControllerV1_verifyAuthenticatorMfaEnrollment",
        "summary": "Verify authenticator app MFA enrollment",
        "description": "This route verifies MFA enrollment using a QR code. Send the **`frontegg-user-id`** header to declare which user. Send information required for MFA in the POST body. The MFA token should be obtained from the authenticator app after scanning the QR code received . A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recoveryCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "recoveryCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/sms/enroll": {
      "post": {
        "operationId": "UsersMfaControllerV1_preEnrollSmsMfa",
        "summary": "Enroll SMS MFA",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "phoneNumberRegexp"
                  }
                },
                "required": [
                  "phoneNumber"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/users/v1/mfa/sms/enroll/verify": {
      "post": {
        "operationId": "UsersMfaControllerV1_enrollSmsMfa",
        "summary": "Verify MFA enrollment",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otcToken": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "otcToken",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication | MFA"
        ]
      }
    },
    "/resources/auth/v1/passwordless/smscode/prelogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_smsCodePreLogin",
        "summary": "SMS code prelogin",
        "description": "This route triggers the system to send an SMS to the user and is the first step when authenticating using the sms otc passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's email as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "userId",
                  "phoneNumber"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phoneNumber": {
                      "type": "string"
                    },
                    "resetPhoneNumberToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User does not have a phone number"
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/auth/v1/passwordless/smscode/postlogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_smsCodePostLogin",
        "summary": "SMS code postlogin",
        "description": "This route authenticates a local user and is the second step when authenticating using the sms otc passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's token id as a POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login. The route returns the refresh cookie and JWT.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "One time code to login with - get it from the email sent after prelogin request"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/auth/v1/passwordless/magiclink/prelogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_magicLinkPrelogin",
        "summary": "Magic link prelogin",
        "description": "This route triggers the system to send the magic link to the user and is the first step when authenticating a local user with the magic link passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's email as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid authentication type, magic link authentication should be enabled"
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/auth/v1/passwordless/magiclink/postlogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_magicLinkPostLogin",
        "summary": "Magic link postlogin",
        "description": "This route authenticates a local user and is the second step when using the magic link passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's token id as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login. The route returns the refresh cookie and JWT.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "One time code to login with - get it from the email sent after prelogin request"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/auth/v1/passwordless/code/prelogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_emailCodePrelogin",
        "summary": "OTC (One-Time Code) prelogin",
        "description": "This route triggers the system to send a one-time code to the user and is the first step when authenticating a local user using the email otc passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's email as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Invalid authentication type, OTC (One-Time Code) authentication should be enabled"
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/auth/v1/passwordless/code/postlogin": {
      "post": {
        "operationId": "AuthenticationPasswordlessControllerV1_emailCodePostLogin",
        "summary": "OTC (One-Time Code) postlogin",
        "description": "This route authenticates a local user and is the second step when using the email otc passwordless mechanism. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's token id as POST body params. Include the invitation token if the user is signing up by invitation. Send the recaptcha token if the recaptcha is enabled for login. The route returns the refresh cookie and JWT.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "One time code to login with - get it from the email sent after prelogin request"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Authentication | Passwordless"
        ]
      }
    },
    "/resources/tenants/invites/v1": {
      "post": {
        "operationId": "TenantInvitesController_createTenantInvite",
        "summary": "Create tenant invite",
        "description": "This route creates a general invitation token. To create an invitation token for a specific tenant, send the tenant’s ID in the request’s body. To create an invitation token for a specific user of a tenant, you can add the user ID on the body params. If a user ID was provided, you can decide wether to send an email to the user or not via the shouldSendEmail param. In order to set up a specific expiration time, use the expiresInMinutes to declare when the invite is being invalidated. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "expiresInMinutes": {
                    "type": "number"
                  },
                  "shouldSendEmail": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "shouldSendEmail": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "token",
                    "expires",
                    "shouldSendEmail"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Account invitations settings"
        ]
      }
    },
    "/resources/tenants/invites/v1/all": {
      "get": {
        "operationId": "TenantInvitesController_getAllInvites",
        "summary": "Get all tenant invites",
        "description": "This route gets all invitations for all tenants. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "expires": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "shouldSendEmail": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "token",
                      "expires",
                      "shouldSendEmail"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Account invitations settings"
        ]
      }
    },
    "/resources/tenants/invites/v1/token/{id}": {
      "delete": {
        "operationId": "TenantInvitesController_deleteTenantInvite",
        "summary": "Delete a tenant invite",
        "description": "This route deletes an invitation to join a tenant using the invitation ID. You can find it via the Get all tenant invites API. Send the invitation ID as a path param - you can get if via the **Get all tenant invites** API. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Account invitations settings"
        ]
      }
    },
    "/resources/configurations/v1": {
      "post": {
        "operationId": "VendorConfigController_addOrUpdateConfig",
        "summary": "Update identity management configuration",
        "description": "This route updates the identity management configuration for a vendor. Send values in the POST body for params that you want to add or update. See the dropdown for available values for each param.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "defaultTokenExpiration": {
                    "type": "number"
                  },
                  "defaultRefreshTokenExpiration": {
                    "type": "number",
                    "maximum": 15552000
                  },
                  "cookieSameSite": {
                    "enum": [
                      "STRICT",
                      "LAX",
                      "NONE"
                    ],
                    "type": "string"
                  },
                  "machineToMachineAuthStrategy": {
                    "enum": [
                      "ClientCredentials",
                      "AccessToken"
                    ],
                    "type": "string"
                  },
                  "allowSignups": {
                    "type": "boolean"
                  },
                  "apiTokensEnabled": {
                    "type": "boolean"
                  },
                  "allowOverridePasswordComplexity": {
                    "type": "boolean"
                  },
                  "allowOverridePasswordExpiration": {
                    "type": "boolean"
                  },
                  "allowOverrideEnforcePasswordHistory": {
                    "type": "boolean"
                  },
                  "jwtAlgorithm": {
                    "enum": [
                      "HS256",
                      "RS256"
                    ],
                    "type": "string"
                  },
                  "allowNotVerifiedUsersLogin": {
                    "type": "boolean"
                  },
                  "forcePermissions": {
                    "type": "boolean"
                  },
                  "addSamlAttributesToJwt": {
                    "type": "boolean"
                  },
                  "authStrategy": {
                    "enum": [
                      "Code",
                      "EmailAndPassword",
                      "MagicLink",
                      "NoLocalAuthentication",
                      "SmsCode"
                    ],
                    "type": "string"
                  },
                  "defaultPasswordlessTokenExpiration": {
                    "type": "number"
                  },
                  "forceSameDeviceOnAuth": {
                    "type": "boolean"
                  },
                  "allowTenantInvitations": {
                    "type": "boolean"
                  },
                  "rotateRefreshTokens": {
                    "type": "boolean"
                  },
                  "skipTenantValidation": {
                    "type": "boolean"
                  },
                  "addRolesToJwt": {
                    "type": "boolean"
                  },
                  "addPermissionsToJwt": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "defaultTokenExpiration": {
                      "type": "number"
                    },
                    "defaultRefreshTokenExpiration": {
                      "type": "number"
                    },
                    "publicKey": {
                      "type": "string"
                    },
                    "cookieSameSite": {
                      "enum": [
                        "STRICT",
                        "LAX",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "allowSignups": {
                      "type": "boolean"
                    },
                    "apiTokensEnabled": {
                      "type": "boolean"
                    },
                    "allowOverridePasswordComplexity": {
                      "type": "boolean"
                    },
                    "allowOverridePasswordExpiration": {
                      "type": "boolean"
                    },
                    "allowOverrideEnforcePasswordHistory": {
                      "type": "boolean"
                    },
                    "jwtAlgorithm": {
                      "enum": [
                        "RS256",
                        "HS256"
                      ],
                      "type": "string"
                    },
                    "jwtSecret": {
                      "type": "string"
                    },
                    "allowNotVerifiedUsersLogin": {
                      "type": "boolean"
                    },
                    "forcePermissions": {
                      "type": "boolean"
                    },
                    "authStrategy": {
                      "enum": [
                        "EmailAndPassword",
                        "MagicLink",
                        "Code",
                        "NoLocalAuthentication",
                        "SmsCode"
                      ],
                      "type": "string"
                    },
                    "defaultPasswordlessTokenExpiration": {
                      "type": "number"
                    },
                    "forceSameDeviceOnAuth": {
                      "type": "boolean"
                    },
                    "allowTenantInvitations": {
                      "type": "boolean"
                    },
                    "rotateRefreshTokens": {
                      "type": "boolean"
                    },
                    "machineToMachineAuthStrategy": {
                      "enum": [
                        "ClientCredentials",
                        "AccessToken"
                      ],
                      "type": "string"
                    },
                    "addRolesToJwt": {
                      "type": "boolean"
                    },
                    "addPermissionsToJwt": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "defaultTokenExpiration",
                    "defaultRefreshTokenExpiration",
                    "publicKey",
                    "cookieSameSite",
                    "allowSignups",
                    "apiTokensEnabled",
                    "allowOverridePasswordComplexity",
                    "allowOverridePasswordExpiration",
                    "allowOverrideEnforcePasswordHistory",
                    "jwtAlgorithm",
                    "jwtSecret",
                    "allowNotVerifiedUsersLogin",
                    "forcePermissions",
                    "authStrategy",
                    "defaultPasswordlessTokenExpiration",
                    "forceSameDeviceOnAuth",
                    "allowTenantInvitations",
                    "rotateRefreshTokens",
                    "machineToMachineAuthStrategy",
                    "addRolesToJwt",
                    "addPermissionsToJwt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Core settings"
        ]
      },
      "get": {
        "operationId": "VendorConfigController_getVendorConfig",
        "summary": "Get identity management configuration",
        "description": "This route gets the identity management configuration for a vendor.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "defaultTokenExpiration": {
                      "type": "number"
                    },
                    "defaultRefreshTokenExpiration": {
                      "type": "number"
                    },
                    "publicKey": {
                      "type": "string"
                    },
                    "cookieSameSite": {
                      "enum": [
                        "STRICT",
                        "LAX",
                        "NONE"
                      ],
                      "type": "string"
                    },
                    "allowSignups": {
                      "type": "boolean"
                    },
                    "apiTokensEnabled": {
                      "type": "boolean"
                    },
                    "allowOverridePasswordComplexity": {
                      "type": "boolean"
                    },
                    "allowOverridePasswordExpiration": {
                      "type": "boolean"
                    },
                    "allowOverrideEnforcePasswordHistory": {
                      "type": "boolean"
                    },
                    "jwtAlgorithm": {
                      "enum": [
                        "RS256",
                        "HS256"
                      ],
                      "type": "string"
                    },
                    "jwtSecret": {
                      "type": "string"
                    },
                    "allowNotVerifiedUsersLogin": {
                      "type": "boolean"
                    },
                    "forcePermissions": {
                      "type": "boolean"
                    },
                    "authStrategy": {
                      "enum": [
                        "EmailAndPassword",
                        "MagicLink",
                        "Code",
                        "NoLocalAuthentication",
                        "SmsCode"
                      ],
                      "type": "string"
                    },
                    "defaultPasswordlessTokenExpiration": {
                      "type": "number"
                    },
                    "forceSameDeviceOnAuth": {
                      "type": "boolean"
                    },
                    "allowTenantInvitations": {
                      "type": "boolean"
                    },
                    "rotateRefreshTokens": {
                      "type": "boolean"
                    },
                    "machineToMachineAuthStrategy": {
                      "enum": [
                        "ClientCredentials",
                        "AccessToken"
                      ],
                      "type": "string"
                    },
                    "addRolesToJwt": {
                      "type": "boolean"
                    },
                    "addPermissionsToJwt": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "defaultTokenExpiration",
                    "defaultRefreshTokenExpiration",
                    "publicKey",
                    "cookieSameSite",
                    "allowSignups",
                    "apiTokensEnabled",
                    "allowOverridePasswordComplexity",
                    "allowOverridePasswordExpiration",
                    "allowOverrideEnforcePasswordHistory",
                    "jwtAlgorithm",
                    "jwtSecret",
                    "allowNotVerifiedUsersLogin",
                    "forcePermissions",
                    "authStrategy",
                    "defaultPasswordlessTokenExpiration",
                    "forceSameDeviceOnAuth",
                    "allowTenantInvitations",
                    "rotateRefreshTokens",
                    "machineToMachineAuthStrategy",
                    "addRolesToJwt",
                    "addPermissionsToJwt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Core settings"
        ]
      }
    },
    "/resources/configurations/v1/captcha-policy": {
      "post": {
        "operationId": "CaptchaPolicyController_createCaptchaPolicy",
        "summary": "Create captcha policy",
        "description": "This route creates a captcha policy for all tenants. To enable the Captcha Policy, make sure to set the enabled variable to true, the site key and secret key to the ones you got from reCaptcha and the minimum score to a number between 0 to 1.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "siteKey": {
                    "type": "string"
                  },
                  "secretKey": {
                    "type": "string"
                  },
                  "minScore": {
                    "type": "number"
                  },
                  "ignoredEmails": {
                    "description": "Captcha validation will be skipped for those emails.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "enabled",
                  "siteKey",
                  "secretKey",
                  "minScore"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "siteKey": {
                      "type": "string"
                    },
                    "secretKey": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "minScore": {
                      "type": "number"
                    },
                    "ignoredEmails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "siteKey",
                    "secretKey",
                    "enabled",
                    "minScore",
                    "ignoredEmails",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Core settings"
        ]
      },
      "put": {
        "operationId": "CaptchaPolicyController_updateCaptchaPolicy",
        "summary": "Update captcha policy",
        "description": "This route updates a captcha policy for all tenants. To enable the Captcha Policy, make sure to set the enabled variable to true, the site key and secret key to the ones you got from reCaptcha and the minimum score to a number between 0 to 1.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "siteKey": {
                    "type": "string"
                  },
                  "secretKey": {
                    "type": "string"
                  },
                  "minScore": {
                    "type": "number"
                  },
                  "ignoredEmails": {
                    "description": "Captcha validation will be skipped for those emails.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "enabled",
                  "siteKey",
                  "secretKey",
                  "minScore"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "siteKey": {
                      "type": "string"
                    },
                    "secretKey": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "minScore": {
                      "type": "number"
                    },
                    "ignoredEmails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "siteKey",
                    "secretKey",
                    "enabled",
                    "minScore",
                    "ignoredEmails",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Core settings"
        ]
      },
      "get": {
        "operationId": "CaptchaPolicyController_getCaptchaPolicy",
        "summary": "Get captcha policy",
        "description": "This route gets the captcha policy. It returns the policy’s ID, site key, secret key, minimum score and ignored emails and wether the . ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "siteKey": {
                      "type": "string"
                    },
                    "secretKey": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "minScore": {
                      "type": "number"
                    },
                    "ignoredEmails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "siteKey",
                    "secretKey",
                    "enabled",
                    "minScore",
                    "ignoredEmails",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Core settings"
        ]
      }
    },
    "/resources/sso/custom/v1": {
      "post": {
        "operationId": "SsoV2Controller_createSsoProvider",
        "summary": "Create custom oauth provider",
        "description": "This route creates a custom social login provider using OAuth details of the identity provider",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "secret": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  },
                  "authorizationUrl": {
                    "type": "string"
                  },
                  "tokenUrl": {
                    "type": "string"
                  },
                  "userInfoUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  },
                  "ssoLogoUrl": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type",
                  "clientId",
                  "secret",
                  "redirectUrl",
                  "authorizationUrl",
                  "tokenUrl",
                  "userInfoUrl",
                  "scopes",
                  "ssoLogoUrl",
                  "displayName",
                  "active"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | Custom social OAuth provider"
        ]
      },
      "get": {
        "operationId": "SsoV2Controller_getSsoProviders",
        "summary": "Get custom oauth provider",
        "description": "This route fetches the custom social login providers on an environment",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Custom social OAuth provider"
        ]
      }
    },
    "/resources/sso/custom/v1/{id}": {
      "patch": {
        "operationId": "SsoV2Controller_updateSsoProvider",
        "summary": "Update custom oauth provider",
        "description": "This route updates the custom social login provider on an environment by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "secret": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  },
                  "authorizationUrl": {
                    "type": "string"
                  },
                  "tokenUrl": {
                    "type": "string"
                  },
                  "userInfoUrl": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  },
                  "ssoLogoUrl": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Custom social OAuth provider"
        ]
      },
      "delete": {
        "operationId": "SsoV2Controller_deleteSsoProvider",
        "summary": "Delete custom oauth provider",
        "description": "This route deletes the custom social login provider on an environment by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Custom social OAuth provider"
        ]
      }
    },
    "/resources/migrations/v1/auth0": {
      "post": {
        "operationId": "UsersControllerV1_migrateUserFromAuth0",
        "summary": "Migrate from Auth0",
        "description": "This route enables you to migrate your users from Auth0 to Frontegg easily. Add the Domain, Client ID, Secret and the tenant’s ID Field Name - they’ll be found on Auth0 and the migration will be as smooth as possible.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "secret": {
                    "type": "string"
                  },
                  "tenantIdFieldName": {
                    "type": "string",
                    "description": "The field name that the tenant ID will be taken from under app metadata"
                  },
                  "isTenantIdOnUserMetadata": {
                    "type": "boolean",
                    "description": "If you would like to take tenant ID from user metadata, set this field to true"
                  }
                },
                "required": [
                  "domain",
                  "clientId",
                  "secret",
                  "tenantIdFieldName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | Data migration"
        ]
      }
    },
    "/resources/migrations/v1/local": {
      "post": {
        "operationId": "UsersControllerV1_migrateUserForVendor",
        "summary": "Migrate a vendor user",
        "description": "This route enables you to migrate a user by sending the following required fields: user’s email, their tenantId and metadata, a new user will be created. This endpoint takes other properties as well, such as the user’s name, their phone number, hashed password, etc...",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "passwordHash": {
                    "type": "string",
                    "description": "The password hash. For SCrypt should include the salt and key seperated by the salt separator"
                  },
                  "passwordHashType": {
                    "type": "string",
                    "enum": [
                      "bcrypt",
                      "scrypt",
                      "firebase-scrypt",
                      "pbkdf2",
                      "argon2"
                    ]
                  },
                  "passwordHashConfig": {
                    "type": "string",
                    "maxLength": 4095,
                    "description": "Stringified JSON Hashing config for the migrated password. For SCrypt should be formatted as { saltSeparator, N, r, p, keyLen }. For FirebaseScrypt should be formatted as { memCost, rounds, saltSeparator, signerKey }"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "phoneNumber can be used both for login with SMS and for MFAThis auto-enrolls the user in MFA, prompting them at first login (regardless of tenant/vendor MFA settings).The required format is an area code + number, no spaces. For example: \"+16037184056\"The number must be unique"
                  },
                  "provider": {
                    "type": "string",
                    "enum": [
                      "local",
                      "saml",
                      "google",
                      "github",
                      "facebook",
                      "microsoft",
                      "scim2",
                      "slack",
                      "apple"
                    ],
                    "default": "local"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object"
                  },
                  "verifyUser": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to verify the user as part of the migration process. If this is set to false, another call is required for the verify user API"
                  },
                  "roleIds": {
                    "default": [],
                    "description": "Role ids of the migrated users. If not provided, the user will be assigned the default roles",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "maxLength": 4095
                  },
                  "authenticatorAppMfaSecret": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Data migration"
        ]
      }
    },
    "/resources/migrations/v1/local/bulk": {
      "post": {
        "operationId": "UsersControllerV1_bulkMigrateUserForVendor",
        "summary": "Migrate vendor users in bulk",
        "description": "This route enables you to migrate users in bulk. Expects an array of `users`. Each entry must include a user's `email` and `tenantId`, which specifies that user's parent account. Use the the other fields as needed to store additional information. We recommend using the `metadata` property if you need to store custom information in a user's object.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "passwordHash": {
                          "type": "string",
                          "description": "The password hash. For SCrypt should include the salt and key seperated by the salt separator"
                        },
                        "passwordHashType": {
                          "type": "string",
                          "enum": [
                            "bcrypt",
                            "scrypt",
                            "firebase-scrypt",
                            "pbkdf2",
                            "argon2"
                          ]
                        },
                        "passwordHashConfig": {
                          "type": "string",
                          "maxLength": 4095,
                          "description": "Stringified JSON Hashing config for the migrated password. For SCrypt should be formatted as { saltSeparator, N, r, p, keyLen }. For FirebaseScrypt should be formatted as { memCost, rounds, saltSeparator, signerKey }"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "description": "phoneNumber can be used both for login with SMS and for MFAThis auto-enrolls the user in MFA, prompting them at first login (regardless of tenant/vendor MFA settings).The required format is an area code + number, no spaces. For example: \"+16037184056\"The number must be unique"
                        },
                        "provider": {
                          "type": "string",
                          "enum": [
                            "local",
                            "saml",
                            "google",
                            "github",
                            "facebook",
                            "microsoft",
                            "scim2",
                            "slack",
                            "apple"
                          ],
                          "default": "local"
                        },
                        "metadata": {
                          "type": "string",
                          "description": "Stringified JSON object"
                        },
                        "verifyUser": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether to verify the user as part of the migration process. If this is set to false, another call is required for the verify user API"
                        },
                        "roleIds": {
                          "default": [],
                          "description": "Role ids of the migrated users. If not provided, the user will be assigned the default roles",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "email": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "profilePictureUrl": {
                          "type": "string",
                          "maxLength": 4095
                        },
                        "authenticatorAppMfaSecret": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "email",
                        "tenantId"
                      ]
                    }
                  }
                },
                "required": [
                  "users"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "migrationId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Data migration"
        ]
      }
    },
    "/resources/migrations/v1/local/bulk/status/{migrationId}": {
      "get": {
        "operationId": "UsersControllerV1_checkBulkMigrationStatus",
        "summary": "Check status of bulk migration",
        "description": "This route returns the status of a pending or completed migration. The payload includes the migration's current `state`, the number of migrated users, and any errors that occured during migration. Payload is limited to 1,000 users.",
        "parameters": [
          {
            "name": "migrationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | Data migration"
        ]
      }
    },
    "/resources/configurations/v1/delegation": {
      "get": {
        "operationId": "DelegationConfigurationControllerV1_getDelegationConfiguration",
        "x-vendor-only": "true",
        "summary": "Get delegation donfiguration",
        "description": "Get information about the delegation configuration (if enabled). A [vendor token](/reference/authenticate_vendor) is required for this route.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Indicates whether delegation has been enabled or disabled.",
                      "example": "true"
                    }
                  },
                  "required": [
                    "enabled"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Delegation"
        ]
      },
      "post": {
        "operationId": "DelegationConfigurationControllerV1_createOrUpdateDelegationConfiguration",
        "x-vendor-only": "true",
        "summary": "Create or update a delegation configuration",
        "description": "Enable or disable the ability to use delegation in a token exchange flow. A [vendor token](/reference/authenticate_vendor) is required for this route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Used to enable or disable delegation for access tokens created using Token Exchange.",
                    "example": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | Delegation"
        ]
      }
    },
    "/resources/mail/v1/configurations": {
      "post": {
        "operationId": "MailConfigController_createOrUpdateMailConfig",
        "summary": "Create or update configuration",
        "description": "Frontegg sends emails via SendGrid. If you already have an account on SendGrid and you wish emails to be sent from your SendGrid account, pass the SendGrid secret key as a body param. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secret": {
                    "type": "string"
                  }
                },
                "required": [
                  "secret"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | Email configuration"
        ]
      },
      "get": {
        "operationId": "MailConfigController_getMailConfig",
        "summary": "Get configuration",
        "description": "This route returns the mail configuration setup on Frontegg for your SendGrid account. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "secret": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secret",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Email configuration"
        ]
      },
      "delete": {
        "operationId": "MailConfigController_deleteMailConfig",
        "summary": "Delete configuration",
        "description": "A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Email configuration"
        ]
      }
    },
    "/resources/mail/v1/configs/templates": {
      "post": {
        "operationId": "MailV1Controller_addOrUpdateTemplate",
        "summary": "Add or update template",
        "description": "This route creates or updates an email template. Select the email template using the type. The type value needs to be the name of one of the Frontegg email templates. See the dropdown for available values. Also, set the sender using senderEmail. Optionally, include values for the other available body params. Send the information for the template in the POST body. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "ResetPassword",
                      "ActivateUser",
                      "InviteToTenant",
                      "PwnedPassword",
                      "MagicLink",
                      "OTC",
                      "ConnectNewDevice",
                      "UserUsedInvitation",
                      "ResetPhoneNumber",
                      "BulkInvitesToTenant",
                      "MFAEnroll",
                      "MFAUnenroll",
                      "NewMFAMethod",
                      "MFARecoveryCode",
                      "RemoveMFAMethod",
                      "EmailVerification",
                      "BruteForceProtection",
                      "SuspiciousIP",
                      "MFAOTC",
                      "ImpossibleTravel",
                      "BotDetection",
                      "SmsAuthenticationEnabled"
                    ]
                  },
                  "senderEmail": {
                    "type": "string"
                  },
                  "redirectURL": {
                    "type": "string",
                    "description": "Only required for: ResetPassword, ActivateUser, InviteToTenant, MagicLink, BulkInvitesToTenant"
                  },
                  "htmlTemplate": {
                    "type": "string",
                    "maxLength": 100000
                  },
                  "subject": {
                    "type": "string"
                  },
                  "fromName": {
                    "type": "string"
                  },
                  "successRedirectUrl": {
                    "type": "string"
                  },
                  "active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Management | Email templates"
        ]
      },
      "get": {
        "operationId": "MailV1Controller_getTemplateConfiguration",
        "summary": "Get template",
        "description": "This route gets all the vendor’s email templates. In order to get a specific template, pass its type as a query param. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ResetPassword",
                "ActivateUser",
                "InviteToTenant",
                "PwnedPassword",
                "MagicLink",
                "OTC",
                "ConnectNewDevice",
                "UserUsedInvitation",
                "ResetPhoneNumber",
                "BulkInvitesToTenant",
                "MFAEnroll",
                "MFAUnenroll",
                "NewMFAMethod",
                "MFARecoveryCode",
                "RemoveMFAMethod",
                "EmailVerification",
                "BruteForceProtection",
                "SuspiciousIP",
                "MFAOTC",
                "ImpossibleTravel",
                "BotDetection",
                "SmsAuthenticationEnabled"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "htmlTemplate": {
                        "type": "string"
                      },
                      "senderEmail": {
                        "type": "string"
                      },
                      "redirectURL": {
                        "type": "string"
                      },
                      "successRedirectUrl": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      },
                      "fromName": {
                        "type": "string"
                      },
                      "active": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "object"
                      },
                      "redirectURLPattern": {
                        "type": "string"
                      },
                      "successRedirectUrlPattern": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "htmlTemplate",
                      "senderEmail",
                      "redirectURL",
                      "successRedirectUrl",
                      "subject",
                      "fromName",
                      "active",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Email templates"
        ]
      }
    },
    "/resources/mail/v1/configs/templates/{templateId}": {
      "delete": {
        "operationId": "MailV1Controller_deleteTemplate",
        "summary": "Delete template",
        "description": "This route deletes specified email template. Select the email template using the ID of the template - which can be obtained via the **Get template** API. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "templateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Email templates"
        ]
      }
    },
    "/resources/mail/v1/configs/{type}/default": {
      "get": {
        "operationId": "MailV1Controller_getDefaultTemplateConfiguration",
        "summary": "Get default template by type",
        "description": "This route gets default email template by type, pass required type as a query param.",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "The email template type",
            "schema": {
              "enum": [
                "ResetPassword",
                "ActivateUser",
                "InviteToTenant",
                "PwnedPassword",
                "MagicLink",
                "OTC",
                "ConnectNewDevice",
                "UserUsedInvitation",
                "ResetPhoneNumber",
                "BulkInvitesToTenant",
                "MFAEnroll",
                "MFAUnenroll",
                "NewMFAMethod",
                "MFARecoveryCode",
                "RemoveMFAMethod",
                "EmailVerification",
                "BruteForceProtection",
                "SuspiciousIP",
                "MFAOTC",
                "ImpossibleTravel",
                "BotDetection",
                "SmsAuthenticationEnabled"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "htmlTemplate": {
                      "type": "string"
                    },
                    "senderEmail": {
                      "type": "string"
                    },
                    "redirectURL": {
                      "type": "string"
                    },
                    "successRedirectUrl": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "fromName": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "object"
                    },
                    "redirectURLPattern": {
                      "type": "string"
                    },
                    "successRedirectUrlPattern": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "htmlTemplate",
                    "senderEmail",
                    "redirectURL",
                    "successRedirectUrl",
                    "subject",
                    "fromName",
                    "active",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Email templates"
        ]
      }
    },
    "/resources/vendor-only/users/access-tokens/v1/active": {
      "get": {
        "operationId": "VendorOnlyUserAccessTokensV1Controller_getActiveAccessTokens",
        "summary": "Get active access tokens list",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | M2M"
        ]
      }
    },
    "/resources/vendor-only/users/access-tokens/v1/{id}": {
      "get": {
        "operationId": "VendorOnlyUserAccessTokensV1Controller_getUserAccessTokenData",
        "summary": "Get user access token data",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userId",
                    "id",
                    "tenantId",
                    "permissions",
                    "roles"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | M2M"
        ]
      }
    },
    "/resources/vendor-only/tenants/access-tokens/v1/{id}": {
      "get": {
        "operationId": "VendorOnlyTenantAccessTokensV1Controller_getTenantAccessTokenData",
        "summary": "Get tenant access token data",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "tenantId",
                    "permissions",
                    "roles"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | M2M"
        ]
      }
    },
    "/resources/configurations/v1/mfa": {
      "post": {
        "operationId": "MfaController_upsertMfaConfig",
        "summary": "Update MFA configuration",
        "description": "This route updates the MFA configuration for a vendor. Send values in the POST body as objects for params that you want to add or update. See the dropdowns for available values for each object param.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authenticationApp": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "serviceName": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "active",
                      "serviceName"
                    ]
                  },
                  "sms": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "tokenLifetimeSeconds": {
                        "type": "number",
                        "minimum": 300
                      }
                    },
                    "required": [
                      "active",
                      "tokenLifetimeSeconds"
                    ]
                  },
                  "email": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "tokenLifetimeSeconds": {
                        "type": "number",
                        "minimum": 300
                      },
                      "sender": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "active",
                      "tokenLifetimeSeconds",
                      "sender"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authenticationApp": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "serviceName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "active",
                        "serviceName"
                      ]
                    },
                    "sms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "tokenLifetimeSeconds": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "active",
                        "tokenLifetimeSeconds"
                      ]
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "tokenLifetimeSeconds": {
                          "type": "number"
                        },
                        "sender": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "active",
                        "tokenLifetimeSeconds",
                        "sender"
                      ]
                    }
                  },
                  "required": [
                    "authenticationApp",
                    "sms",
                    "email"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | MFA Configuration"
        ]
      },
      "get": {
        "operationId": "MfaController_getMfaConfig",
        "summary": "Get MFA configuration",
        "description": "This route gets the MFA configuration for a vendor.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authenticationApp": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "serviceName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "active",
                        "serviceName"
                      ]
                    },
                    "sms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "tokenLifetimeSeconds": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "active",
                        "tokenLifetimeSeconds"
                      ]
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "tokenLifetimeSeconds": {
                          "type": "number"
                        },
                        "sender": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "active",
                        "tokenLifetimeSeconds",
                        "sender"
                      ]
                    }
                  },
                  "required": [
                    "authenticationApp",
                    "sms",
                    "email"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | MFA Configuration"
        ]
      }
    },
    "/resources/permissions/v1/categories": {
      "get": {
        "operationId": "PermissionsCategoriesController_getAllCategoriesWithPermissions",
        "summary": "Get permissions categories",
        "description": "This route returns all permissions categories for a vendor. Each category is an object containing the name, description, permissions, and other defining information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "feCategory": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "createdAt",
                      "feCategory"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permission categories"
        ]
      },
      "post": {
        "operationId": "PermissionsCategoriesController_createPermissionCategory",
        "summary": "Create category",
        "description": "Use this route to add a new permissions category. Each category you add requires you to send information about the category in the POST body. Note that you do not associate the category with permissions here. You do that using the add and update permission routes where you send the category ID as a body parameter.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "feCategory": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "description",
                    "createdAt",
                    "feCategory"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permission categories"
        ]
      }
    },
    "/resources/permissions/v1/categories/{categoryId}": {
      "patch": {
        "operationId": "PermissionsCategoriesController_updateCategory",
        "summary": "Update category",
        "description": "This route updates an existing permissions category. Add the category ID as a path parameter to the route url to specify which category you are updating. Send the updated information about the category in the PATCH body. Note that here is not where you update the permissions associated with the category. Use the add or update permissions routes to do that. Use the **Get categories** API to get ",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Permission categories"
        ]
      },
      "delete": {
        "operationId": "PermissionsCategoriesController_deleteCategory",
        "summary": "Delete category",
        "description": "This route deletes a category. Add the category ID as a path parameter to the route url to specify which category you are deleting. Use the **Get categories** API to get the category ID.",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Permission categories"
        ]
      }
    },
    "/resources/permissions/v1": {
      "get": {
        "operationId": "PermissionsControllerV1_getAllPermissions",
        "summary": "Get permissions",
        "description": "This route returns all permissions for the vendor. Each permission is an object containing the name, description, assigned roles, categories, and other defining information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "roleIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "categoryId": {
                        "type": "string"
                      },
                      "fePermission": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "key",
                      "name",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "roleIds",
                      "categoryId",
                      "fePermission"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      },
      "post": {
        "operationId": "PermissionsControllerV1_addPermissions",
        "summary": "Create permissions",
        "description": "This route adds a new permission. Each permission you add requires information about the permission in the POST body. Note that you do not associate permissions to the role here. Use the associate permission to roles route to do that.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "assignmentType": {
                      "type": "string",
                      "enum": [
                        "NEVER",
                        "ALWAYS",
                        "ASSIGNABLE"
                      ]
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "roleIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "categoryId": {
                        "type": "string"
                      },
                      "fePermission": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "key",
                      "name",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "roleIds",
                      "categoryId",
                      "fePermission"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      }
    },
    "/resources/permissions/v1/{permissionId}": {
      "delete": {
        "operationId": "PermissionsControllerV1_deletePermission",
        "summary": "Delete permission",
        "description": "This route deletes a permission. Add the permission ID as a path parameter to the route url to specify which permission you are deleting.  Use the **Get permissions** API to get the permission ID.",
        "parameters": [
          {
            "name": "permissionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      },
      "patch": {
        "operationId": "PermissionsControllerV1_updatePermission",
        "summary": "Update permission",
        "description": "This route updates an existing permission. Add the permission ID as a path parameter to the route url to specify which permission you are updating. Send the updated information about the permission in the PATCH body. Note that you do not update roles for the permission here. Use the associate permission to roles route to do that.",
        "parameters": [
          {
            "name": "permissionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "fePermission": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "key",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "roleIds",
                    "categoryId",
                    "fePermission"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      }
    },
    "/resources/permissions/v1/{permissionId}/roles": {
      "put": {
        "operationId": "PermissionsControllerV1_setRolesToPermission",
        "summary": "Set a permission to multiple roles",
        "description": "This route associates a permission to multiple roles. Add the permission ID as a path parameter to the route url and include the role IDs in the request body as an array of strings. Any pre-existing roles associated with the permission will stay associated. Use the **Get roles** API to get the role IDs.",
        "parameters": [
          {
            "name": "permissionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleIds": {
                    "description": "The permission will be assigned to the specified roles",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "roleIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "fePermission": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "key",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "roleIds",
                    "categoryId",
                    "fePermission"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      }
    },
    "/resources/permissions/v1/classification": {
      "put": {
        "operationId": "PermissionsControllerV1_updatePermissionsAssignmentType",
        "summary": "Set permissions classification",
        "description": "This route accepts an array of **`permissionIds`** and the type for these permissions classifications. This allows segregating which permissions will be used from self service",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "NEVER",
                      "ALWAYS",
                      "ASSIGNABLE"
                    ]
                  }
                },
                "required": [
                  "permissionIds",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "fePermission": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "key",
                    "name",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "roleIds",
                    "categoryId",
                    "fePermission"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Permissions"
        ]
      }
    },
    "/resources/roles/v1": {
      "get": {
        "operationId": "PermissionsControllerV1_getAllRoles",
        "summary": "Get roles",
        "description": "This route returns all roles for all tenants. To get a role for a specific tenant, send the tenant ID in the **`frontegg-tenant-id`** header. Each role is an object containing the name, permissions, and other defining information.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "firstUserRole": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "key",
                      "name",
                      "description",
                      "isDefault",
                      "firstUserRole",
                      "level",
                      "createdAt",
                      "updatedAt",
                      "permissions"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Roles"
        ]
      },
      "post": {
        "operationId": "PermissionsControllerV1_addRoles",
        "summary": "Create roles",
        "description": "This route adds a new role for all tenants. To add a role for a specific tenant, send tenant ID in the **`frontegg-tenant-id`** header. Each role you add requires information about the role in the POST body. Note that you do not assign permissions to the role here. Use the attach permissions to role route to do that.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "This role will be assigned for every user that will be added without specified roles"
                    },
                    "migrateRole": {
                      "type": "boolean",
                      "description": "Set this property to `true` together with `isDefault` in order to assign this role to all users"
                    },
                    "firstUserRole": {
                      "type": "boolean",
                      "description": "This role will be assigned to the first user of a tenant (new tenants only)"
                    },
                    "level": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 32767,
                      "description": "Role level for roles elevation, lower level means stronger role."
                    }
                  },
                  "required": [
                    "key",
                    "name",
                    "level"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "firstUserRole": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "key",
                      "name",
                      "description",
                      "isDefault",
                      "firstUserRole",
                      "level",
                      "createdAt",
                      "updatedAt",
                      "permissions"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | Roles"
        ]
      }
    },
    "/resources/roles/v1/{roleId}": {
      "delete": {
        "operationId": "PermissionsControllerV1_deleteRole",
        "summary": "Delete role",
        "description": "This route deletes a role. Add the role ID as a path parameter to the route url to specify which role you are deleting.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Management | Roles"
        ]
      },
      "patch": {
        "operationId": "PermissionsControllerV1_updateRole",
        "summary": "Update role",
        "description": "This route updates an existing role. Add the role ID as a path parameter to the route url to specify which role you are updating. Send the updated information about the role in the PATCH body. Note that you do not update permissions for the role here. Use the attach permissions to role route to do that. Use the **Get roles** API to get the role ID.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isDefault": {
                    "type": "boolean",
                    "description": "This role will be assigned for every user that will be added without specified roles"
                  },
                  "firstUserRole": {
                    "type": "boolean",
                    "description": "This role will be assigned to the first user of a tenant (new tenants only)"
                  },
                  "migrateRole": {
                    "type": "boolean",
                    "description": "Set this property to `true` together with `isDefault` in order to assign this role to all users"
                  },
                  "level": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 32767,
                    "description": "Role level for roles elevation, lower level means stronger role."
                  },
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "firstUserRole": {
                      "type": "boolean"
                    },
                    "level": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "key",
                    "name",
                    "description",
                    "isDefault",
                    "firstUserRole",
                    "level",
                    "createdAt",
                    "updatedAt",
                    "permissions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Roles"
        ]
      }
    },
    "/resources/roles/v1/{roleId}/permissions": {
      "put": {
        "operationId": "PermissionsControllerV1_setPermissionsToRole",
        "summary": "Set multiple permissions to a role",
        "description": "This route assigns permissions to a role. Add the role ID as a path parameter to the route url and include the permission IDs in the request body as an array of strings. Any pre-existing permissions will be overridden by the new permissions. Use the get roles API to get the role IDs. Use the **Get permissions** API to get the permissions IDs.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissionIds": {
                    "description": "Set permission ids to attach to the role",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "permissionIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "firstUserRole": {
                      "type": "boolean"
                    },
                    "level": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "key",
                    "name",
                    "description",
                    "isDefault",
                    "firstUserRole",
                    "level",
                    "createdAt",
                    "updatedAt",
                    "permissions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Roles"
        ]
      }
    },
    "/resources/configurations/v1/sms": {
      "post": {
        "operationId": "VendorSmsController_createSmsVendorConfig",
        "summary": "Creates or updates a vendor SMS config",
        "description": "This route creates or updates SMS configuration for a vendor.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "senderName": {
                    "type": "string",
                    "description": "The sender name will be used only when alphanumeric sender is supported in the recipient country. This is usually a phone number or the name of the sender, dependeing on what is configured on your Twilio account"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "account ID"
                  },
                  "token": {
                    "type": "string",
                    "description": "token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS configuration"
        ]
      },
      "delete": {
        "operationId": "VendorSmsController_deleteSmsVendorConfig",
        "summary": "Deletes a vendor SMS config",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | SMS configuration"
        ]
      },
      "get": {
        "operationId": "VendorSmsController_getSmsVendorConfig",
        "summary": "Gets a vendor SMS config",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS configuration"
        ]
      }
    },
    "/resources/configurations/v1/sms/templates": {
      "get": {
        "operationId": "VendorSmsController_getAllSmsTemplates",
        "summary": "Gets vendor SMS templates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS templates"
        ]
      }
    },
    "/resources/configurations/v1/sms/templates/{type}": {
      "get": {
        "operationId": "VendorSmsController_getSmsTemplate",
        "summary": "Gets vendor SMS template by type",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS templates"
        ]
      },
      "delete": {
        "operationId": "VendorSmsController_deleteSmsTemplate",
        "summary": "Deletes vendor SMS template by type",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | SMS templates"
        ]
      },
      "post": {
        "operationId": "VendorSmsController_createSmsTemplate",
        "summary": "Create or update a vendor SMS template",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS templates"
        ]
      }
    },
    "/resources/configurations/v1/sms/templates/{type}/default": {
      "get": {
        "operationId": "VendorSmsController_getSmsDefaultTemplate",
        "summary": "Gets vendor default SMS template by type",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | SMS templates"
        ]
      }
    },
    "/resources/configurations/sessions/v1/vendor": {
      "get": {
        "operationId": "SessionConfigurationControllerV1_getVendorSessionConfiguration",
        "summary": "Get environment session configuration",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Sessions configuration"
        ]
      }
    },
    "/resources/user-sources/v1": {
      "get": {
        "operationId": "UserSourcesControllerV1_getUserSources",
        "summary": "Get vendor user sources",
        "description": "This route gets all vendor's user sources.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "appIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "index": {
                        "type": "number"
                      },
                      "configuration": {
                        "type": "object"
                      },
                      "usersCount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "description",
                      "appIds",
                      "index",
                      "configuration",
                      "usersCount"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/{id}": {
      "get": {
        "operationId": "UserSourcesControllerV1_getUserSource",
        "summary": "Get user source",
        "description": "This route gets a user source by id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      },
      "delete": {
        "operationId": "UserSourcesControllerV1_deleteUserSource",
        "summary": "Delete user source",
        "description": "This route deletes a user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/auth0": {
      "post": {
        "operationId": "UserSourcesControllerV1_createAuth0ExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route creates a new external user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "domain": {
                            "type": "string",
                            "description": "the auth0 domain"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "the auth0 application clientId"
                          },
                          "secret": {
                            "type": "string",
                            "description": "the auth0 application secret"
                          },
                          "tenantIdFieldName": {
                            "type": "string",
                            "description": "the tenant id field name in the user's app_metadata"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "domain",
                          "clientId",
                          "secret",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                },
                "required": [
                  "name",
                  "configuration",
                  "index"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "appIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "index": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "appIds",
                    "description",
                    "index"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/cognito": {
      "post": {
        "operationId": "UserSourcesControllerV1_createCognitoExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route creates a new external user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "region": {
                            "type": "string",
                            "description": "The aws region of the cognito user pool"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The cognito app client id"
                          },
                          "userPoolId": {
                            "type": "string",
                            "description": "The id of the cognito user pool"
                          },
                          "accessKeyId": {
                            "type": "string",
                            "description": "The access key of the aws account"
                          },
                          "secretAccessKey": {
                            "type": "string",
                            "description": "The secret of the aws account"
                          },
                          "tenantIdFieldName": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string",
                            "description": "The cognito application client secret, required if the app client is configured with a client secret"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "region",
                          "clientId",
                          "userPoolId",
                          "accessKeyId",
                          "secretAccessKey",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                },
                "required": [
                  "name",
                  "configuration",
                  "index"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "appIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "index": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "appIds",
                    "description",
                    "index"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/custom-code": {
      "post": {
        "operationId": "UserSourcesControllerV1_createCustomCodeExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route creates a new external user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "codePayload": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "codePayload"
                        ]
                      }
                    ]
                  },
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                },
                "required": [
                  "name",
                  "configuration",
                  "index"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "appIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "index": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "appIds",
                    "description",
                    "index"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/federation": {
      "post": {
        "operationId": "UserSourcesControllerV1_createFederationUserSource",
        "summary": "Create vendor federation user source",
        "description": "This route creates a new federation user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "wellknownUrl": {
                            "type": "string",
                            "description": "The url of the service provider"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client id from the service provider"
                          },
                          "secret": {
                            "type": "string",
                            "description": "The secret from the service provider"
                          },
                          "tenantIdFieldName": {
                            "type": "string",
                            "description": "The tenant id field name in the ID Token from the service provider"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "wellknownUrl",
                          "clientId",
                          "secret",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                },
                "required": [
                  "name",
                  "configuration",
                  "index"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "appIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "index": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "appIds",
                    "description",
                    "index"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/auth0/{id}": {
      "put": {
        "operationId": "UserSourcesControllerV1_updateAuth0ExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route updates an external user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "domain": {
                            "type": "string",
                            "description": "the auth0 domain"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "the auth0 application clientId"
                          },
                          "secret": {
                            "type": "string",
                            "description": "the auth0 application secret"
                          },
                          "tenantIdFieldName": {
                            "type": "string",
                            "description": "the tenant id field name in the user's app_metadata"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "domain",
                          "clientId",
                          "secret",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/cognito/{id}": {
      "put": {
        "operationId": "UserSourcesControllerV1_updateCognitoExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route updates an external user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "region": {
                            "type": "string",
                            "description": "The aws region of the cognito user pool"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The cognito app client id"
                          },
                          "userPoolId": {
                            "type": "string",
                            "description": "The id of the cognito user pool"
                          },
                          "accessKeyId": {
                            "type": "string",
                            "description": "The access key of the aws account"
                          },
                          "secretAccessKey": {
                            "type": "string",
                            "description": "The secret of the aws account"
                          },
                          "tenantIdFieldName": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string",
                            "description": "The cognito application client secret, required if the app client is configured with a client secret"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "region",
                          "clientId",
                          "userPoolId",
                          "accessKeyId",
                          "secretAccessKey",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/external/custom-code/{id}": {
      "put": {
        "operationId": "UserSourcesControllerV1_updateCustomCodeExternalUserSource",
        "summary": "Create vendor external user source",
        "description": "This route updates an external user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "isMigrated": {
                            "type": "boolean",
                            "description": "Whether to migrate the users"
                          },
                          "codePayload": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "isMigrated",
                          "codePayload"
                        ]
                      }
                    ]
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/federation/{id}": {
      "put": {
        "operationId": "UserSourcesControllerV1_updateFederationUserSource",
        "summary": "Create vendor external user source",
        "description": "This route updates a federation user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user source name"
                  },
                  "configuration": {
                    "description": "User source configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "syncOnLogin": {
                            "type": "boolean",
                            "description": "Whether to sync user profile attributes on each login"
                          },
                          "wellknownUrl": {
                            "type": "string",
                            "description": "The url of the service provider"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The client id from the service provider"
                          },
                          "secret": {
                            "type": "string",
                            "description": "The secret from the service provider"
                          },
                          "tenantIdFieldName": {
                            "type": "string",
                            "description": "The tenant id field name in the ID Token from the service provider"
                          }
                        },
                        "required": [
                          "syncOnLogin",
                          "wellknownUrl",
                          "clientId",
                          "secret",
                          "tenantIdFieldName"
                        ]
                      }
                    ]
                  },
                  "index": {
                    "type": "number",
                    "description": "The user source index"
                  },
                  "description": {
                    "type": "string",
                    "description": "The user source description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/assign": {
      "post": {
        "operationId": "UserSourcesControllerV1_assignUserSource",
        "summary": "Assign applications to a user source",
        "description": "This route assigns applications to a user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "userSourceId": {
                    "type": "string",
                    "description": "The user source id"
                  }
                },
                "required": [
                  "appIds",
                  "userSourceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/unassign": {
      "post": {
        "operationId": "UserSourcesControllerV1_unassignUserSource",
        "summary": "Unassign applications from a user source",
        "description": "This route unassigns applications from a user source.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appIds": {
                    "description": "The application ids to assign to this user source",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "userSourceId": {
                    "type": "string",
                    "description": "The user source id"
                  }
                },
                "required": [
                  "appIds",
                  "userSourceId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/user-sources/v1/{id}/users": {
      "get": {
        "operationId": "UserSourcesControllerV1_getUserSourceUsers",
        "summary": "Get user source users",
        "description": "This route gets all of users of a user source.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | User sources"
        ]
      }
    },
    "/resources/vendor-only/users/v1/{userId}": {
      "get": {
        "operationId": "VendorOnlyUsers_getUserById",
        "summary": "Get user",
        "description": "This route gets a user by its ID regardless of any tenant the user belongs to. Send the user’s ID as a path params. The route is for vendor-use only.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/vendor-only/users/v1/{userId}/mfa/unenroll": {
      "post": {
        "operationId": "VendorOnlyUsers_MFAUnenroll",
        "summary": "Unenroll user from MFA globally",
        "description": "This route unenrolls a user from MFA regardless of any tenant the user belongs to. Send the user’s ID as a path params. The route is for vendor-use only.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/vendor-only/users/v1/passwords/verify": {
      "post": {
        "operationId": "VendorOnlyUsers_verifyUserPassword",
        "summary": "Verify user's password",
        "description": "This route verify user email and password. Send the user’s email and password and the response will be true or false. The route is for vendor-use only.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/vendor-only/users/v1": {
      "post": {
        "operationId": "VendorOnlyUsers_createUser",
        "summary": "Create user",
        "description": "This route creates a user and allows setting **`mfaBypass`** property on that user for testing purposes. The route is for vendor-use only.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object"
                  },
                  "vendorMetadata": {
                    "type": "string",
                    "description": "Extra vendor-only data. stringified JSON object"
                  },
                  "roleIds": {
                    "description": "Role IDs to assign to the user",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "expirationInSeconds": {
                    "type": "number",
                    "description": "Temporary user expiration in seconds"
                  },
                  "mfaBypass": {
                    "type": "boolean",
                    "description": "Bypass MFA for this user"
                  }
                },
                "required": [
                  "email",
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/tenants/users/v1/statuses": {
      "get": {
        "operationId": "get",
        "summary": "Get users tenants statuses",
        "description": "This route gets the tenants statuses of vendor users. Expects an array of **`userIds`** with max of 200 and optionally an array of **`userTenantStatuses`** as query params. Note that there is a limit of 2000 tenants statuses per user.",
        "parameters": [
          {
            "name": "userIds",
            "required": true,
            "in": "query",
            "description": "User IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userTenantStatuses",
            "required": false,
            "in": "query",
            "description": "Tenant Statuses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PendingInvitation",
                  "PendingLogin",
                  "Activated",
                  "NotActivated"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "tenantsStatuses": {
                      "description": "Tenants Statuses",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "PendingInvitation",
                              "PendingLogin",
                              "Activated",
                              "NotActivated"
                            ]
                          }
                        },
                        "required": [
                          "tenantId",
                          "status"
                        ]
                      }
                    }
                  },
                  "required": [
                    "userId",
                    "tenantsStatuses"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/temporary/v1/configuration": {
      "put": {
        "operationId": "TemporaryUsersV1Controller_updateConfiguration",
        "summary": "Set temporary users configuration",
        "description": "This route updates the settings for temporary users, use it to enable or disable it for an environment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "enabled"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      },
      "get": {
        "operationId": "TemporaryUsersV1Controller_getConfiguration",
        "summary": "Gets temporary users configuration",
        "description": "This route get the settings for temporary users, use it to check whether the policy is's enabled or disabled",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/bulk/v1/invite": {
      "post": {
        "operationId": "UsersBulkControllerV1_bulkInviteUsers",
        "summary": "Invite users to tenant in bulk",
        "description": "This route enables you to invite users to tenant in bulk. Expects an array of `users`. Each entry must include a user's `email`.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "name": {
                          "type": "string"
                        },
                        "profilePictureUrl": {
                          "type": "string",
                          "maxLength": 4095
                        },
                        "password": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string",
                          "default": "local",
                          "enum": [
                            "local",
                            "saml",
                            "google",
                            "github",
                            "facebook",
                            "microsoft",
                            "scim2",
                            "slack",
                            "apple"
                          ]
                        },
                        "metadata": {
                          "type": "string",
                          "description": "Stringified JSON object",
                          "example": "{}"
                        },
                        "skipInviteEmail": {
                          "type": "boolean"
                        },
                        "roleIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "emailMetadata": {
                          "type": "object"
                        },
                        "expirationInSeconds": {
                          "type": "number",
                          "minimum": 300,
                          "description": "Temporary user expiration in seconds"
                        },
                        "verified": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "email"
                      ]
                    }
                  }
                },
                "required": [
                  "users"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/bulk/v1/status/{id}": {
      "get": {
        "operationId": "UsersBulkControllerV1_getBulkInviteStatus",
        "summary": "Get status of bulk invite task",
        "description": "This route enables you to invite users to tenant in bulk. Expects an array of `users`. Each entry must include a user's `email`.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/email": {
      "get": {
        "operationId": "UsersControllerV1_getUserByEmail",
        "summary": "Get user by email",
        "description": "This route get user by email",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "type": "string",
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{id}": {
      "get": {
        "operationId": "UsersControllerV1_getUserById",
        "summary": "Get user by ID",
        "description": "This route gets a specific user from a tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant and send the user’s ID as a path params to declare which user. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}": {
      "put": {
        "operationId": "UsersControllerV1_updateUserForVendor",
        "summary": "Update user globally",
        "description": "This route updates a user’s information globally, not just for a specific tenant. Send the user’s ID as a path params to declare which user. Send the updated user values in the PUT body. The PUT request does a complete update of the resource, so include values for all the body params that you want to have values. This is a global update, so do not send a **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "^\\+[1-9]{1}(\\-?)(([0-9])(\\-?)){5,13}(([0-9]$){1})"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 4095
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "vendorMetadata": {
                    "type": "string",
                    "description": "Extra vendor-only data. stringified JSON object"
                  },
                  "mfaBypass": {
                    "type": "boolean",
                    "description": "Indicates whether MFA should be bypassed for this user"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      },
      "delete": {
        "operationId": "UsersControllerV1_removeUserFromTenant",
        "summary": "Remove user",
        "description": "This route removes a user globally or from a specific tenant. To remove the user globally, no need to send a **`frontegg-tenant-id`**. To remove the user from only a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. Send the user's ID as a path params to declare which user you are removing. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/{userId}/verify": {
      "post": {
        "operationId": "UsersControllerV1_verifyUser",
        "summary": "Verify user",
        "description": "This route marks a user as verified. Send the user’s ID as a path params. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/invisible": {
      "put": {
        "operationId": "UsersControllerV1_setUserInvisibleMode",
        "summary": "Make user invisible",
        "description": "This route sets whether a user is invisible or visible. If a user is invisible, the user data remains in the Frontegg system but the user will not appear in the list of users in the admin box. An invisible user remains part of the tenant. Send the user’s ID as a path params. Also send as a PUT body params a Boolean value for invisible. True is invisible and false is visible. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invisible": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "invisible"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/superuser": {
      "put": {
        "operationId": "UsersControllerV1_setUserSuperuserMode",
        "summary": "Make User superuser",
        "description": "This route sets whether a user is a super user. A super user has access to all tenants within the workspace. Send the user ID as a path params. Also send as a PUT body params a Boolean value for super user. True is super user and false is not. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "superUser": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "superUser"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/tenant": {
      "put": {
        "operationId": "UsersControllerV1_updateUserTenantForVendor",
        "summary": "Set user's tenant",
        "description": "This route is for the vendor to set the active tenant of a user. The active tenant is the tenant the user will see in their admin portal and also the tenant for which the API reference will default to in situations where a route is tenant specific. Send the user ID as a path param and the tenant ID as a PUT body param. When using a non-existing tenant ID, there will be a tenant create for the provided ID. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "description": "Desired tenant to set as active tenant for user"
                  },
                  "validateTenantExist": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      },
      "post": {
        "operationId": "UsersControllerV1_addUserToTenantForVendor",
        "summary": "Add to tenant",
        "description": "This route adds a user to a tenant. Send the user ID as a path params and the tenant ID as a PUT body params. To skip the invite email requirement, pass as an optional PUT body params for skipInviteEmail. Set its value to true to skip the invite email. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validateTenantExist": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "string"
                  },
                  "skipInviteEmail": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/email": {
      "put": {
        "operationId": "UsersControllerV1_updateUserEmail",
        "summary": "Update user email",
        "description": "This route updates the email address for a user globally, regardless of tenant. Send the user’s ID as a path params. Send the user’s new email address as a PUT body params.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/links/generate-activation-token": {
      "post": {
        "operationId": "UsersControllerV1_generateUserActivationLink",
        "summary": "Generate activation token",
        "description": "This route generates a new activation token for a user. Send the user’s ID as a path params. You may need this route in combination with the routes under Users Activation. It will not send the activation email itself, but return the activation link and token. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "link",
                    "token",
                    "userId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/links/generate-password-reset-token": {
      "post": {
        "operationId": "UsersControllerV1_generateUserPasswordResetLink",
        "summary": "Generate password reset token",
        "description": "This route generates a password reset token for a user. Send the user’s ID as a path params. You may need this route in combination with the routes under Users Passwords. It will not send the reset password email itself, but return the reset link and token. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "link",
                    "token",
                    "userId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/unlock": {
      "post": {
        "operationId": "UsersControllerV1_unlockUser",
        "summary": "Unlock user",
        "description": "This route unlocks a locked user. An unlocked user can sign in and use the system globally, regardless of the tenant. To unlock a user, call this route and send the user’s ID as a path params. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/{userId}/lock": {
      "post": {
        "operationId": "UsersControllerV1_lockUser",
        "summary": "Lock user",
        "description": "This route locks a user. A locked user cannot sign in or use the system globally, regardless of the tenant. To lock a user, call this route and send the user’s ID as a path params. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/users/v1/tenants/migrate": {
      "put": {
        "operationId": "UsersControllerV1_moveAllUsersTenants",
        "summary": "Move all users from one tenant to another",
        "description": "This route migrates all the users from the source tenant to the target. Specify in the request body the srcTenantId (the source tenant ID) and targetTenantId (the target tenant ID). A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "srcTenantId": {
                    "type": "string"
                  },
                  "targetTenantId": {
                    "type": "string"
                  }
                },
                "required": [
                  "srcTenantId",
                  "targetTenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Management | Users"
        ]
      }
    },
    "/resources/tenants/invites/v1/user": {
      "get": {
        "operationId": "TenantInvitesController_getTenantInviteForUser",
        "summary": "Get tenant invite of user",
        "description": "This route gets an invitation for a specific user to join a tenant. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "shouldSendEmail": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "token",
                    "expires",
                    "shouldSendEmail"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      },
      "post": {
        "operationId": "TenantInvitesController_createTenantInviteForUser",
        "summary": "Create tenant invite for user",
        "description": "This route creates an invitation for a specific user to join a tenant. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header. To create a general invitation, use the general invitation route.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expiresInMinutes": {
                    "type": "number"
                  },
                  "shouldSendEmail": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "expiresInMinutes",
                  "shouldSendEmail"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "shouldSendEmail": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "token",
                    "expires",
                    "shouldSendEmail"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      },
      "delete": {
        "operationId": "TenantInvitesController_deleteTenantInviteForUser",
        "summary": "Delete tenant invite of user",
        "description": "This route deletes an invitation for a specific user to join a tenant. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header. To delete a general invitation, use the general invitation route.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      },
      "patch": {
        "operationId": "TenantInvitesController_updateTenantInviteForUser",
        "summary": "Update tenant invite of user",
        "description": "This route updates an invitation for a specific user to join a tenant. In order to set up a specific expiration time, use the expiresInMinutes to declare when the invite is being invalidated. The shouldSendEmail boolean declares wether an invitation email will be sent or not. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expiresInMinutes": {
                    "type": "number"
                  },
                  "shouldSendEmail": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "shouldSendEmail": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "token",
                    "expires",
                    "shouldSendEmail"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      }
    },
    "/resources/tenants/invites/v1/verify": {
      "post": {
        "operationId": "TenantInvitesController_verifyTenantInvite",
        "summary": "Verify tenant invite",
        "description": "This route verifies a tenant invitation. Pass the invitation token as the token param. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "shouldSendEmail": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "token",
                    "expires",
                    "shouldSendEmail"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      }
    },
    "/resources/tenants/invites/v1/configuration": {
      "get": {
        "operationId": "getInvitationConfiguration",
        "summary": "Get tenant invite configuration",
        "description": "This route checks if the vendor allows tenant invitations and if notifications are active. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tenantInvitationsAllowed": {
                      "type": "boolean"
                    },
                    "emailsEnabled": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "tenantInvitationsAllowed",
                    "emailsEnabled"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Account invitations"
        ]
      }
    },
    "/resources/configurations/restrictions/v1/email-domain": {
      "post": {
        "operationId": "DomainRestrictionsController_createDomainRestriction",
        "summary": "Create domain restriction",
        "description": "This route creates a new domain restriction for a tenant. Send values in the POST body as objects. See the dropdowns for available values for each object param.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "pattern": "domainRegex"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "BLOCK"
                    ]
                  }
                },
                "required": [
                  "domain",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "domain": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "ALLOW",
                        "BLOCK"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "domain",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      },
      "get": {
        "operationId": "DomainRestrictionsController_getDomainRestrictions",
        "summary": "Get domain restrictions",
        "description": "This route gets the domain restrictions for a tenant.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      }
    },
    "/resources/configurations/restrictions/v1/email-domain/config": {
      "get": {
        "operationId": "DomainRestrictionsController_getDomainRestrictionsConfig",
        "summary": "Get domain restrictions",
        "description": "This route gets the domain restrictions for a tenant.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "listType": {
                      "enum": [
                        "ALLOW",
                        "BLOCK"
                      ],
                      "type": "string"
                    },
                    "blockPublicDomains": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "active",
                    "listType",
                    "blockPublicDomains"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      },
      "post": {
        "operationId": "DomainRestrictionsController_updateDomainRestrictionsConfig",
        "summary": "Change domain restrictions config list type and toggle it off/on",
        "description": "This route updates domain restrictions config, can toggle check on/off.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "blockPublicDomains": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "BLOCK"
                    ]
                  }
                },
                "required": [
                  "active"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "listType": {
                      "enum": [
                        "ALLOW",
                        "BLOCK"
                      ],
                      "type": "string"
                    },
                    "blockPublicDomains": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "active",
                    "listType",
                    "blockPublicDomains"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      }
    },
    "/resources/configurations/restrictions/v1/email-domain/{id}": {
      "delete": {
        "operationId": "DomainRestrictionsController_deleteDomainRestriction",
        "summary": "Delete domain restriction",
        "description": "This route deletes domain restriction.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      }
    },
    "/resources/configurations/restrictions/v1/email-domain/replace-bulk": {
      "post": {
        "operationId": "DomainRestrictionsController_createBulkDomainsRestriction",
        "summary": "Replace bulk domain restriction",
        "description": "This route replaces all domains from the incoming request",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "BLOCK"
                    ]
                  },
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "domainRegexString"
                    }
                  }
                },
                "required": [
                  "type",
                  "domains"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "domain": {
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "ALLOW",
                          "BLOCK"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "domain",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Domain restriction"
        ]
      }
    },
    "/resources/groups/v1": {
      "get": {
        "operationId": "GroupsControllerV1_getAllGroups",
        "summary": "Get all groups",
        "description": "This route gets all user groups for a tenant.",
        "parameters": [
          {
            "name": "_groupsRelations",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "roles",
                "users",
                "rolesAndUsers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "post": {
        "operationId": "GroupsControllerV1_createGroup",
        "summary": "Create group",
        "description": "This route creates user group for a tenant.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "string",
                    "description": "Color for group display"
                  },
                  "description": {
                    "type": "string",
                    "description": "Group description"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "name": {
                    "type": "string",
                    "description": "Group unique name"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "profilePictureUrl": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "activatedForTenant": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "name",
                          "profilePictureUrl",
                          "createdAt",
                          "activatedForTenant"
                        ]
                      }
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color",
                    "description",
                    "metadata",
                    "roles",
                    "users",
                    "managedBy"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v1/bulkGet": {
      "post": {
        "operationId": "GroupsControllerV1_getGroupsByIds",
        "summary": "Get groups by ids",
        "description": "This route gets user group by given IDs for a tenant.",
        "parameters": [
          {
            "name": "_groupsRelations",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "roles",
                "users",
                "rolesAndUsers"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupsIds": {
                    "description": "Group IDs",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "groupsIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v1/{id}": {
      "patch": {
        "operationId": "GroupsControllerV1_updateGroup",
        "summary": "Update group",
        "description": "This route updates user group by id for a tenant.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "color": {
                    "type": "string",
                    "description": "Color for group display"
                  },
                  "description": {
                    "type": "string",
                    "description": "Group description"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "name": {
                    "type": "string",
                    "description": "Group unique name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "profilePictureUrl": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "activatedForTenant": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "name",
                          "profilePictureUrl",
                          "createdAt",
                          "activatedForTenant"
                        ]
                      }
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "color",
                    "description",
                    "metadata",
                    "roles",
                    "users",
                    "managedBy"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "delete": {
        "operationId": "GroupsControllerV1_deleteGroup",
        "summary": "Delete group",
        "description": "This route deletes user group by id for a tenant.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "get": {
        "operationId": "GroupsControllerV1_getGroupById",
        "summary": "Get group by ID",
        "description": "This route gets user group by given ID for a tenant.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_groupsRelations",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "roles",
                "users",
                "rolesAndUsers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v1/config": {
      "get": {
        "operationId": "GroupsControllerV1_getGroupsConfiguration",
        "summary": "Get groups configuration",
        "description": "This route gets the user group configuration for a vendor.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "post": {
        "operationId": "GroupsControllerV1_createOrUpdateGroupsConfiguration",
        "summary": "Create or update groups configuration",
        "description": "This route creates or updates the user group configuration for a vendor.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Determine whether groups are enabled/disabled. Default value is true.",
                    "default": true
                  },
                  "rolesEnabled": {
                    "type": "boolean",
                    "description": "Determine whether groups can have roles or not. Default value is true.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v1/{groupId}/roles": {
      "post": {
        "operationId": "GroupsControllerV1_addRolesToGroup",
        "summary": "Add roles to group",
        "description": "This route adds requested roles to existing group. User can assign only roles that are lower then his own.",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleIds": {
                    "description": "Will add / remove requested roles from the group",
                    "example": [
                      "5fbae0d3-a3b7-4b1e-8d64-6c9428f84aae",
                      "8b2d0f9a-f39e-49b3-98ca-93c85c06d1a7"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "roleIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "delete": {
        "operationId": "GroupsControllerV1_removeRolesFromGroup",
        "summary": "Remove roles from group",
        "description": "This route removes requested roles from existing group.",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleIds": {
                    "description": "Will add / remove requested roles from the group",
                    "example": [
                      "5fbae0d3-a3b7-4b1e-8d64-6c9428f84aae",
                      "8b2d0f9a-f39e-49b3-98ca-93c85c06d1a7"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "roleIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v1/{groupId}/users": {
      "post": {
        "operationId": "GroupsControllerV1_addUsersToGroup",
        "summary": "Add users to group",
        "description": "This route adds requested users to existing group. Only allowed for users that have higher roles then group roles.",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "description": "An array of User IDs to add / remove existing users to / from the group.",
                    "example": [
                      "262io276-3c5v-9y31-ba03-281674a89d4c",
                      "eeooc819-87dd-1cdd-b81d-e8829vm9d684"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "userIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      },
      "delete": {
        "operationId": "GroupsControllerV1_removeUsersFromGroup",
        "summary": "Remove users from group",
        "description": "This route removes requested users from existing group.",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "description": "An array of User IDs to add / remove existing users to / from the group.",
                    "example": [
                      "262io276-3c5v-9y31-ba03-281674a89d4c",
                      "eeooc819-87dd-1cdd-b81d-e8829vm9d684"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "userIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/groups/v2": {
      "get": {
        "operationId": "GroupsControllerV2_getAllGroupsPaginated",
        "summary": "Get all groups paginated",
        "description": "This route gets all user groups for a tenant.",
        "parameters": [
          {
            "name": "_groupsRelations",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "roles",
                "users",
                "rolesAndUsers"
              ],
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "_sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "id",
                "name",
                "createdAt",
                "updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "_order",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Groups"
        ]
      }
    },
    "/resources/configurations/v1/restrictions/ip/config": {
      "post": {
        "operationId": "IPRestrictionsControllerV1_createDomainRestriction",
        "summary": "Create or update IP restriction configuration (ALLOW/BLOCK)",
        "description": "This route creates or updates ip restrictions config.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "strategy": {
                    "enum": [
                      "ALLOW",
                      "BLOCK"
                    ],
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      },
      "get": {
        "operationId": "IPRestrictionsControllerV1_getIpRestrictionConfig",
        "summary": "Get IP restriction configuration (ALLOW/BLOCK)",
        "description": "This route gets the ip restrictions config for a tenant.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      }
    },
    "/resources/configurations/v1/restrictions/ip": {
      "get": {
        "operationId": "IPRestrictionsControllerV1_getAllIpRestrictions",
        "summary": "Get all IP restrictions",
        "description": "This route gets the ip restrictions for a tenant.",
        "parameters": [
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "_filter",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      },
      "post": {
        "operationId": "IPRestrictionsControllerV1_createIpRestriction",
        "summary": "Create IP restriction",
        "description": "This route creates or updates ip restriction for a tenant. Send values in the POST body as objects. See the dropdowns for available values for each object param.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "IP or CIDR (v4 and v6 are supported)"
                  },
                  "description": {
                    "type": "string"
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "BLOCK"
                    ]
                  },
                  "isActive": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "ip",
                  "strategy"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      }
    },
    "/resources/configurations/v1/restrictions/ip/verify": {
      "post": {
        "operationId": "IPRestrictionsControllerV1_testCurrentIp",
        "summary": "Test Current IP",
        "description": "This route checks if current ip is allowed.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      }
    },
    "/resources/configurations/v1/restrictions/ip/verify/allow": {
      "post": {
        "operationId": "testCurrentIpInAllowList",
        "summary": "Test current IP is in allow list",
        "description": "This route checks if current ip is active in the allow list.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      }
    },
    "/resources/configurations/v1/restrictions/ip/{id}": {
      "delete": {
        "operationId": "IPRestrictionsControllerV1_deleteIpRestrictionById",
        "summary": "Delete IP restriction by IP",
        "description": "This route deletes ip restriction.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | IP restriction"
        ]
      }
    },
    "/resources/configurations/v1/lockout-policy": {
      "post": {
        "operationId": "LockoutPolicyController_createLockoutPolicy",
        "summary": "Create lockout policy",
        "description": "This route creates a lockout policy for all tenants. To create a lockout policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. To enable the Lockout Policy, make sure to set the enabled variable to true and the maximum attempts to a number of your preference.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Determine whether the Lockout Policy is enabled"
                  },
                  "maxAttempts": {
                    "type": "number",
                    "description": "The number of the maximum login attempts user can do",
                    "minimum": 1
                  }
                },
                "required": [
                  "enabled",
                  "maxAttempts"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "maxAttempts": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "maxAttempts",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Lockout Policy already exists"
          }
        },
        "tags": [
          "Self-service | Lockout policy"
        ]
      },
      "patch": {
        "operationId": "LockoutPolicyController_updateLockoutPolicy",
        "summary": "Update lockout policy",
        "description": "This route updates a lockout policy for all tenants. To update a lockout policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. To disable the lockout policy, make sure to set the enabled variable to false. The maximum attempts variable can also be changed to a number of your preference",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Determine whether the Lockout Policy is enabled"
                  },
                  "maxAttempts": {
                    "type": "number",
                    "description": "The number of the maximum login attempts user can do",
                    "minimum": 1
                  }
                },
                "required": [
                  "enabled",
                  "maxAttempts"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "maxAttempts": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "maxAttempts",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Lockout Policy not found. Try to use the Create Lockout Policy API"
          }
        },
        "tags": [
          "Self-service | Lockout policy"
        ]
      },
      "get": {
        "operationId": "LockoutPolicyController_getLockoutPolicy",
        "summary": "Get lockout policy",
        "description": "This route gets the lockout policy for all tenants or one tenant specifically. To get the lockout policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "maxAttempts": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "maxAttempts",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Lockout policy is not defined"
          }
        },
        "tags": [
          "Self-service | Lockout policy"
        ]
      }
    },
    "/resources/configurations/v1/mfa-policy": {
      "post": {
        "operationId": "SecurityPolicyController_createMfaPolicy",
        "summary": "Create MFA policy",
        "description": "This route creates the MFA policy globally or for a specific tenant. To create an MFA policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enforceMFAType": {
                    "type": "string",
                    "enum": [
                      "DontForce",
                      "Force",
                      "ForceExceptSAML"
                    ],
                    "description": "Determine whether MFA should be enforced.",
                    "default": "Force"
                  },
                  "allowRememberMyDevice": {
                    "type": "boolean",
                    "description": "Determine whether devices can be remembered and authentication can be skipped.",
                    "default": false
                  },
                  "mfaDeviceExpiration": {
                    "type": "number",
                    "description": "Expiration time of device in seconds",
                    "default": 1209600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enforceMFAType": {
                      "type": "string"
                    },
                    "allowRememberMyDevice": {
                      "type": "boolean"
                    },
                    "mfaDeviceExpiration": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "allowRememberMyDevice",
                    "mfaDeviceExpiration",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "MFA Policy already exists. Try to use the Update MFA Policy API"
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      },
      "patch": {
        "operationId": "SecurityPolicyController_updateSecurityPolicy",
        "summary": "Update security policy",
        "description": "This route updates the MFA policy for all tenants. To update an MFA policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enforceMFAType": {
                    "type": "string",
                    "enum": [
                      "DontForce",
                      "Force",
                      "ForceExceptSAML"
                    ],
                    "description": "Determine whether MFA should be enforced.",
                    "default": "Force"
                  },
                  "allowRememberMyDevice": {
                    "type": "boolean",
                    "description": "Determine whether devices can be remembered and authentication can be skipped.",
                    "default": false
                  },
                  "mfaDeviceExpiration": {
                    "type": "number",
                    "description": "Expiration time of device in seconds",
                    "default": 1209600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enforceMFAType": {
                      "type": "string"
                    },
                    "allowRememberMyDevice": {
                      "type": "boolean"
                    },
                    "mfaDeviceExpiration": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "allowRememberMyDevice",
                    "mfaDeviceExpiration",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Missing parameters to update"
          },
          "404": {
            "description": "Security policy not found"
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      },
      "put": {
        "operationId": "SecurityPolicyController_upsertSecurityPolicy",
        "summary": "Upsert security policy",
        "description": "This route creates or updates the MFA policy for all tenants. To create or update an MFA policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enforceMFAType": {
                    "type": "string",
                    "enum": [
                      "DontForce",
                      "Force",
                      "ForceExceptSAML"
                    ],
                    "description": "Determine whether MFA should be enforced.",
                    "default": "Force"
                  },
                  "allowRememberMyDevice": {
                    "type": "boolean",
                    "description": "Determine whether devices can be remembered and authentication can be skipped.",
                    "default": false
                  },
                  "mfaDeviceExpiration": {
                    "type": "number",
                    "description": "Expiration time of device in seconds",
                    "default": 1209600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enforceMFAType": {
                      "type": "string"
                    },
                    "allowRememberMyDevice": {
                      "type": "boolean"
                    },
                    "mfaDeviceExpiration": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "allowRememberMyDevice",
                    "mfaDeviceExpiration",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      },
      "get": {
        "operationId": "SecurityPolicyController_getSecurityPolicy",
        "summary": "Get security policy",
        "description": "This route gets the MFA policy for all tenants. To get the MFA policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enforceMFAType": {
                      "type": "string"
                    },
                    "allowRememberMyDevice": {
                      "type": "boolean"
                    },
                    "mfaDeviceExpiration": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "allowRememberMyDevice",
                    "mfaDeviceExpiration",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Security Policy not found. MFA is disabled"
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      }
    },
    "/resources/configurations/v1/mfa/strategies": {
      "get": {
        "operationId": "MFAStrategiesControllerV1_getMFAStrategies",
        "summary": "Get MFA strategies",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      },
      "post": {
        "operationId": "MFAStrategiesControllerV1_createOrUpdateMFAStrategy",
        "summary": "Create or update MFA strategy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "AuthenticatorApp",
                      "WebAuthnPlatform",
                      "WebAuthnCrossPlatform",
                      "SMS"
                    ]
                  }
                },
                "required": [
                  "isActive",
                  "strategy"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | MFA Settings"
        ]
      }
    },
    "/resources/configurations/v1/password": {
      "post": {
        "operationId": "PasswordPolicyController_addOrUpdatePasswordConfig",
        "summary": "Update password configuration",
        "description": "This route updates the password policy for all tenants. To update the password policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. Send the updated values as POST body params.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowPassphrases": {
                    "type": "boolean"
                  },
                  "maxLength": {
                    "type": "number"
                  },
                  "minLength": {
                    "type": "number"
                  },
                  "minPhraseLength": {
                    "type": "number"
                  },
                  "minOptionalTestsToPass": {
                    "type": "number"
                  },
                  "blockPwnedPasswords": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowPassphrases": {
                      "type": "boolean"
                    },
                    "maxLength": {
                      "type": "number"
                    },
                    "minLength": {
                      "type": "number"
                    },
                    "minPhraseLength": {
                      "type": "number"
                    },
                    "minOptionalTestsToPass": {
                      "type": "number"
                    },
                    "blockPwnedPasswords": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "blockPwnedPasswords"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      },
      "get": {
        "operationId": "PasswordPolicyController_getPasswordConfig",
        "summary": "Gets password policy configuration",
        "description": "This route gets the password policy for all tenants. To get the password policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowPassphrases": {
                      "type": "boolean"
                    },
                    "maxLength": {
                      "type": "number"
                    },
                    "minLength": {
                      "type": "number"
                    },
                    "minPhraseLength": {
                      "type": "number"
                    },
                    "minOptionalTestsToPass": {
                      "type": "number"
                    },
                    "blockPwnedPasswords": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "blockPwnedPasswords"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/configurations/v1/password-history-policy": {
      "post": {
        "operationId": "PasswordHistoryPolicyController_createPolicy",
        "summary": "Create password history policy",
        "description": "This route creates the password history policy for all tenants. To create a password history policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. To enable the Password History, make sure to set the enabled variable to true and the password history size to a number between 1 to 10.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Detemine whether the history policy is enbaled.",
                    "default": false
                  },
                  "historySize": {
                    "type": "number",
                    "description": "Number of passwords per user to remember in the history.",
                    "maximum": 10,
                    "minimum": 1,
                    "default": 1
                  }
                },
                "required": [
                  "enabled",
                  "historySize"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "historySize": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "historySize",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Policy already exists. Use the Update Password History Policy API."
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      },
      "patch": {
        "operationId": "PasswordHistoryPolicyController_updatePolicy",
        "summary": "Update password history policy",
        "description": "This route updates the password history policy for all tenants. To update a password history policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header. To disable the password history policy, make sure to set the enabled variable to false. The password history size can also be changed to a number between 1 to 10",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Detemine whether the history policy is enbaled.",
                    "default": false
                  },
                  "historySize": {
                    "type": "number",
                    "description": "Number of passwords per user to remember in the history.",
                    "maximum": 10,
                    "minimum": 1,
                    "default": 1
                  }
                },
                "required": [
                  "enabled",
                  "historySize"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "historySize": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "historySize",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "History size must to be between 1 to 10"
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      },
      "get": {
        "operationId": "PasswordHistoryPolicyController_getPolicy",
        "summary": "Get password history policy",
        "description": "This route gets the password history policy for all tenants or one tenant specifically. To create a password history policy for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "historySize": {
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "historySize",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Password History Policy not found. Policy is disabled"
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/users/v1/passwords/reset": {
      "post": {
        "operationId": "UsersPasswordControllerV1_resetPassword",
        "summary": "Reset password",
        "description": "This route sends a reset password email to the user. Send the user’s email in the POST body. If your email template uses metadata, send email metadata in the POST body, too.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "emailMetadata": {
                    "type": "object"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/users/v1/passwords/reset/verify": {
      "post": {
        "operationId": "UsersPasswordControllerV1_verifyResetPassword",
        "summary": "Verify password",
        "description": "This route verifies a user’s password using a verification token. Send the userId, token, and password in the POST body. For the token, see the route under users for generating user password reset token.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "token",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/users/v1/passwords/change": {
      "post": {
        "operationId": "UsersPasswordControllerV1_changePassword",
        "summary": "Change password",
        "description": "This route changes the password for a logged-in user. Send the **`frontegg-user-id`** and **`frontegg-tenant-id`** headers to declare which user and which tenant. Send the current and new passwords in the POST body.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/users/v1/passwords/config": {
      "get": {
        "operationId": "UsersPasswordControllerV1_getUserPasswordConfig",
        "summary": "Get strictest password configuration",
        "description": "This route gets the user’s hardest password configuration. This is useful when a user belongs to multiple tenants and does not have the same password complexity for all of them. The route returns the strictest setting the user is subject to.",
        "parameters": [
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowPassphrases": {
                      "type": "boolean"
                    },
                    "maxLength": {
                      "type": "number"
                    },
                    "minLength": {
                      "type": "number"
                    },
                    "minPhraseLength": {
                      "type": "number"
                    },
                    "minOptionalTestsToPass": {
                      "type": "number"
                    },
                    "blockPwnedPasswords": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "blockPwnedPasswords"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Password settings"
        ]
      }
    },
    "/resources/users/access-tokens/v1": {
      "post": {
        "operationId": "UserAccessTokensV1Controller_createUserAccessToken",
        "summary": "Create user access token",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "expiresInMinutes": {
                    "type": "number",
                    "minimum": 1,
                    "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      },
      "get": {
        "operationId": "UserAccessTokensV1Controller_getUserAccessTokens",
        "summary": "Get user access tokens",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessTokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "expires": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accessTokens"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      }
    },
    "/resources/users/access-tokens/v1/{id}": {
      "delete": {
        "operationId": "UserAccessTokensV1Controller_deleteUserAccessToken",
        "summary": "Delete user access token by token ID",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      }
    },
    "/resources/users/api-tokens/v1": {
      "post": {
        "operationId": "UserApiTokensV1Controller_createTenantApiToken",
        "summary": "Create user client credentials token",
        "description": "This route creates a user-specific API token. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header. Optionally, send as POST body params values for metadata and description.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "Extra data that will be encoded as part of the JWT"
                  },
                  "description": {
                    "type": "string"
                  },
                  "expiresInMinutes": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5256000,
                    "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Extra data that will be encoded as part of the JWT"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientId",
                    "description",
                    "metadata",
                    "createdAt",
                    "secret"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      },
      "get": {
        "operationId": "UserApiTokensV1Controller_getApiTokens",
        "summary": "Get user client credentials tokens",
        "description": "This route gets a user-specific API token. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Extra data that will be encoded as part of the JWT"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "description",
                      "metadata",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      }
    },
    "/resources/users/api-tokens/v1/{id}": {
      "delete": {
        "operationId": "UserApiTokensV1Controller_deleteApiToken",
        "summary": "Delete user client credentials token by token ID",
        "description": "This route deletes a user-specific API token. Send the token as the ID path param. Send the user’s ID in the **`frontegg-user-id`** header and the tenant’s ID in the **`frontegg-tenant-id`** header. Optionally, send as POST body params values for metadata and description.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Personal tokens"
        ]
      }
    },
    "/resources/roles/v2": {
      "get": {
        "operationId": "PermissionsControllerV2_getAllRoles",
        "summary": "Get roles v2",
        "description": "This route returns all roles for vendor. Each role is an object containing the name, permissions, and other defining information.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2000,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "_sortBy",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "key",
                "name",
                "description",
                "isDefault",
                "firstUserRole",
                "level",
                "updatedAt",
                "createdAt",
                "permissions",
                "userTenants",
                "groups"
              ],
              "type": "string"
            }
          },
          {
            "name": "_levels",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "_tenantIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "_order",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "_filter",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Roles"
        ]
      },
      "post": {
        "operationId": "RolesControllerV2_addRole",
        "summary": "Create a new role",
        "description": "This route adds a new role for a specific tenant. Send the tenant ID in the **`frontegg-tenant-id`** header. Add the required permissions within the request body to customize the role.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "This role will be assigned for every user that will be added without specified roles"
                  },
                  "baseRoleId": {
                    "type": "string",
                    "description": "Role level of the new role will be based on this parameter"
                  },
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "key",
                  "name",
                  "baseRoleId",
                  "permissionIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "vendorId",
                    "tenantId",
                    "key",
                    "name",
                    "description",
                    "isDefault",
                    "permissions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Roles"
        ]
      }
    },
    "/resources/roles/v2/distinct-levels": {
      "get": {
        "operationId": "RolesControllerV2_getDistinctLevels",
        "summary": "Get distinct levels of roles",
        "description": "This route returns all levels from roles for vendor.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Roles"
        ]
      }
    },
    "/resources/roles/v2/distinct-tenants": {
      "get": {
        "operationId": "RolesControllerV2_getDistinctTenants",
        "summary": "Get distinct assigned tenants of roles",
        "description": "This route returns all assigned tenant ids from roles for vendor.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "For relating a role to a specific tenant, use `get tenants` API to find the tenant ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Roles"
        ]
      }
    },
    "/resources/configurations/sessions/v1": {
      "get": {
        "operationId": "SessionConfigurationControllerV1_getSessionConfiguration",
        "summary": "Get tenant or vendor default session configuration",
        "description": "This route gets the Session configuration for the entire environment or a specific tenant. To get the Session configuration for a specific tenant, send the tenant’s id in the **`frontegg-tenant-id`** header",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Session management"
        ]
      },
      "post": {
        "operationId": "SessionConfigurationControllerV1_createSessionConfiguration",
        "summary": "Create or update tenant or vendor default session configuration",
        "description": "This route creates or updates Session configuration for the entire environment or a specific tenant. To update the Session configuration for a specific tenant, send the tenant’s ID in the **`frontegg-tenant-id`** header",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionIdleTimeoutConfiguration": {
                    "type": "object",
                    "properties": {
                      "isActive": {
                        "type": "boolean"
                      },
                      "timeout": {
                        "type": "number",
                        "minimum": 60,
                        "maximum": 2073600
                      }
                    },
                    "required": [
                      "isActive",
                      "timeout"
                    ]
                  },
                  "sessionTimeoutConfiguration": {
                    "type": "object",
                    "properties": {
                      "isActive": {
                        "type": "boolean"
                      },
                      "timeout": {
                        "type": "number",
                        "minimum": 60
                      }
                    },
                    "required": [
                      "isActive",
                      "timeout"
                    ]
                  },
                  "sessionConcurrentConfiguration": {
                    "type": "object",
                    "properties": {
                      "isActive": {
                        "type": "boolean"
                      },
                      "maxSessions": {
                        "type": "number",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "isActive",
                      "maxSessions"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Session management"
        ]
      }
    },
    "/resources/tenants/access-tokens/v1": {
      "post": {
        "operationId": "TenantAccessTokensV1Controller_createTenantAccessToken",
        "summary": "Create tenant access token",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "expiresInMinutes": {
                    "type": "number",
                    "minimum": 1,
                    "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
                  },
                  "roleIds": {
                    "description": "Array of role IDs to attach to the token",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "roleIds": {
                      "description": "Array of role ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdByUserId": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "createdAt",
                    "roleIds",
                    "createdByUserId"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      },
      "get": {
        "operationId": "TenantAccessTokensV1Controller_getTenantAccessTokens",
        "summary": "Get tenant access tokens",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessTokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "expires": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "description": "Array of role ids",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdByUserId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "roleIds",
                          "createdByUserId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accessTokens"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      }
    },
    "/resources/tenants/access-tokens/v1/{id}": {
      "delete": {
        "operationId": "TenantAccessTokensV1Controller_deleteTenantAccessToken",
        "summary": "Delete tenant access token",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      }
    },
    "/resources/tenants/api-tokens/v1": {
      "post": {
        "operationId": "TenantApiTokensV1Controller_createTenantApiToken",
        "summary": "Create client credentials token",
        "description": "Do not use. Instead, use v2 of this route.",
        "deprecated": true,
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "Extra data that will be encoded as part of the JWT"
                  },
                  "description": {
                    "type": "string"
                  },
                  "roleIds": {
                    "description": "Array of role ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "permissionIds": {
                    "description": "Array of permission ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "createdByUserId": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Extra data that will be encoded as part of the JWT"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "permissionIds": {
                      "description": "Array of permission ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roleIds": {
                      "description": "Array of role ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientId",
                    "description",
                    "tenantId",
                    "secret",
                    "createdByUserId",
                    "metadata",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      },
      "get": {
        "operationId": "TenantApiTokensV1Controller_getTenantsApiTokens",
        "summary": "Get client credentials tokens",
        "description": "This route gets all API tokens for a specific tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "createdByUserId": {
                        "type": "string",
                        "nullable": true
                      },
                      "metadata": {
                        "type": "object",
                        "description": "Extra data that will be encoded as part of the JWT"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissionIds": {
                        "description": "Array of permission ids",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "roleIds": {
                        "description": "Array of role ids",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "expires": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "description",
                      "tenantId",
                      "createdByUserId",
                      "metadata",
                      "createdAt",
                      "permissionIds",
                      "roleIds",
                      "expires"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      }
    },
    "/resources/tenants/api-tokens/v1/{id}": {
      "delete": {
        "operationId": "TenantApiTokensV1Controller_deleteTenantApiToken",
        "summary": "Delete client credentials token",
        "description": "This route deletes a tenant API token. Send the token ID as the path param. Send the tenant’s ID in the **`frontegg-tenant-id`** header.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      },
      "patch": {
        "operationId": "TenantApiTokensV1Controller_updateTenantApiToken",
        "summary": "Update client credentials token",
        "description": "This route updates a tenant API token. Send the tenant’s ID in the **`frontegg-tenant-id`** header. Optionally, send as POST body params values for description, roles, and permissions for the token.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "roleIds": {
                    "description": "Array of role ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "permissionIds": {
                    "description": "Array of permission ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "createdByUserId": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Extra data that will be encoded as part of the JWT"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "permissionIds": {
                      "description": "Array of permission ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roleIds": {
                      "description": "Array of role ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientId",
                    "description",
                    "tenantId",
                    "createdByUserId",
                    "metadata",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      }
    },
    "/resources/tenants/api-tokens/v2": {
      "post": {
        "operationId": "TenantApiTokensV2Controller_createTenantApiToken",
        "summary": "Create client credentials token",
        "description": "This route creates a tenant API token. Send the tenant’s ID in the **`frontegg-tenant-id`** header. Optionally, send as POST body params values for metadata, description, roles, and permissions for the token.</br></br>You can get roles & permissions via API",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "description": "Extra data that will be encoded as part of the JWT"
                  },
                  "description": {
                    "type": "string"
                  },
                  "roleIds": {
                    "description": "Array of role ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "permissionIds": {
                    "description": "Array of permission ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "createdByUserId": {
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Extra data that will be encoded as part of the JWT"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "permissionIds": {
                      "description": "Array of permission ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roleIds": {
                      "description": "Array of role ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expires": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientId",
                    "description",
                    "tenantId",
                    "secret",
                    "createdByUserId",
                    "metadata",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | Tenant tokens"
        ]
      }
    },
    "/resources/users/temporary/v1/{userId}": {
      "put": {
        "operationId": "TemporaryUsersV1Controller_editTimeLimit",
        "summary": "Sets a permanent user to temporary",
        "description": "This route updates the settings for temporary users, use it to enable or disable it for an environment",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expirationInSeconds": {
                    "type": "number",
                    "minimum": 300
                  }
                },
                "required": [
                  "expirationInSeconds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expirationInSeconds": {
                      "type": "number",
                      "minimum": 300
                    }
                  },
                  "required": [
                    "expirationInSeconds"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      },
      "delete": {
        "operationId": "TemporaryUsersV1Controller_setUserPermanent",
        "summary": "Sets a temporary user to permanent",
        "description": "This route sets an existing temporary user as permanent. Send the user’s ID as a path params.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/activate/reset": {
      "post": {
        "operationId": "UsersActivationControllerV1_resetActivationToken",
        "summary": "Reset user activation token",
        "description": "This route resets the activation token for a user and triggers a new activation email being sent to the user’s email.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "emailMetadata": {
                    "type": "object"
                  }
                },
                "required": [
                  "email",
                  "emailMetadata"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/invitation/reset": {
      "post": {
        "operationId": "UsersTenantManagementControllerV1_resetTenantInvitationToken",
        "summary": "Reset invitation",
        "description": "This route resets an invitation for a user to join a specific tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header and the user's email in the POST body. It returns a new invitation link with a new token.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/invitation/reset/all": {
      "post": {
        "operationId": "UsersTenantManagementControllerV1_resetAllTenantsInvitationToken",
        "summary": "Reset all invitation tokens",
        "description": "This route resets all invitation for a user to join all sub tenants which currently have invitation token. Send the tenant’s ID in the **`frontegg-tenant-id`** header and the user's email in the POST body. It returns a new invitation link with a new token.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v3": {
      "get": {
        "operationId": "UsersControllerV3_getUsers",
        "summary": "Get users",
        "description": "This route gets all users for a tenant/vendor. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant or leave it empty for all tenants' users",
        "parameters": [
          {
            "name": "_includeSubTenants",
            "required": false,
            "in": "query",
            "description": "when passing a user id, gives the option to include or not include sub tenants when searching users",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "_email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_tenantId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "createdAt",
                "name",
                "email",
                "id",
                "verified",
                "isLocked",
                "provider",
                "tenantId"
              ],
              "type": "string"
            }
          },
          {
            "name": "_order",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v3/roles": {
      "get": {
        "operationId": "UsersControllerV3_getUsersRoles",
        "summary": "Get users roles",
        "description": "This route gets all users roles for a tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant.",
        "parameters": [
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v3/groups": {
      "get": {
        "operationId": "UsersControllerV3_getUsersGroups",
        "summary": "Get users groups",
        "description": "This route gets all users groups for a tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant.",
        "parameters": [
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v2": {
      "post": {
        "operationId": "UsersControllerV2_createUser",
        "summary": "Invite user",
        "description": "This route creates a user for a specific tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare to what tenant this user is assigned. Send the user's information in the POST body. The user's email and metadata are required. The metadata can be empty, like `{}`.",
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "maxLength": 4095
                  },
                  "password": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string",
                    "default": "local",
                    "enum": [
                      "local",
                      "saml",
                      "google",
                      "github",
                      "facebook",
                      "microsoft",
                      "scim2",
                      "slack",
                      "apple"
                    ]
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "skipInviteEmail": {
                    "type": "boolean"
                  },
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "emailMetadata": {
                    "type": "object"
                  },
                  "expirationInSeconds": {
                    "type": "number",
                    "minimum": 300,
                    "description": "Temporary user expiration in seconds"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v2/me": {
      "put": {
        "operationId": "UsersControllerV2_updateUserProfile",
        "summary": "Update user profile",
        "description": "This route updates a logged-in user's profile. Send the updated values in the PUT body. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "^\\+[1-9]{1}(\\-?)(([0-9])(\\-?)){5,13}(([0-9]$){1})"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 4095
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      },
      "get": {
        "operationId": "UsersControllerV2_getUserProfile",
        "summary": "Get user profile",
        "description": "This route gets a logged-in user's profile. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1": {
      "post": {
        "operationId": "UsersControllerV1_createUser",
        "summary": "Create user",
        "description": "Use the V2 route for Invite User. This route is no longer relevant.",
        "deprecated": true,
        "parameters": [
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "maxLength": 4095
                  },
                  "password": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string",
                    "default": "local",
                    "enum": [
                      "local",
                      "saml",
                      "google",
                      "github",
                      "facebook",
                      "microsoft",
                      "scim2",
                      "slack",
                      "apple"
                    ]
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "skipInviteEmail": {
                    "type": "boolean"
                  },
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "emailMetadata": {
                    "type": "object"
                  },
                  "expirationInSeconds": {
                    "type": "number",
                    "minimum": 300,
                    "description": "Temporary user expiration in seconds"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      },
      "get": {
        "operationId": "UsersControllerV1_getUsers",
        "summary": "Get Users v1",
        "deprecated": true,
        "parameters": [
          {
            "name": "_limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "_offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "_filter",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "createdAt",
                "name",
                "email",
                "id",
                "verified",
                "isLocked",
                "provider",
                "tenantId"
              ],
              "type": "string"
            }
          },
          {
            "name": "_order",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "_includeSubTenants",
            "required": false,
            "in": "query",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      },
      "put": {
        "operationId": "UsersControllerV1_updateUser",
        "summary": "Update user",
        "description": "This route updates a user’s information for a specific tenant. Send the **`frontegg-user-id`** and **`frontegg-tenant-id`** headers to declare which user and which tenant.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "^\\+[1-9]{1}(\\-?)(([0-9])(\\-?)){5,13}(([0-9]$){1})"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 4095
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object",
                    "example": "{}"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/{userId}/roles": {
      "post": {
        "operationId": "UsersControllerV1_addRolesToUser",
        "summary": "Assign roles to user",
        "description": "This route associates roles to a specific user for a specific tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant. Send the role IDs in the POST body. The role IDs need to be an array of strings. Also send the user's ID as a path params.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "roleIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "level",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "tenantId",
                    "userId",
                    "roles"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      },
      "delete": {
        "operationId": "UsersControllerV1_deleteRolesFromUser",
        "summary": "Unassign roles from user",
        "description": "This route disassociates roles from a specific user for a specific tenant. Send the tenant’s ID in the **`frontegg-tenant-id`** header to declare which tenant. Send the role IDs in the POST body. The role IDs need to be an array of strings. Also send the user's ID as a path params.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "roleIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "level",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "tenantId",
                    "userId",
                    "roles"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/tenant": {
      "put": {
        "operationId": "UsersControllerV1_updateUserTenant",
        "summary": "Update user's active tenant",
        "description": "This route updates the logged in user’s tenant . The user uses it when they have multiple tenants and they want to change the current tenant they log in to. Send the **`frontegg-user-id`** and **`frontegg-tenant-id`** headers to declare which user and which tenant. Send the tenant ID in the POST body.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-tenant-id",
            "in": "header",
            "description": "The tenant ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tenantId": {
                    "type": "string",
                    "description": "Desired tenant to set as active tenant for user"
                  }
                },
                "required": [
                  "tenantId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "roles",
                    "permissions",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/activate": {
      "post": {
        "operationId": "UsersActivationControllerV1_activateUser",
        "summary": "Activate user",
        "description": "This route activates a non-activated user. You can use it to create your own activation flow. Send the **`frontegg-vendor-host`** as a header to declare which vendor. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the required userId and activation token in the POST body. For generating an activation token, see the route under users for generating an activation token. If the vendor's sign in flow requires a password or recaptcha, send those values in the POST body. Instead of this route, consider using our email template for user activation.",
        "parameters": [
          {
            "name": "frontegg-vendor-host",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "lastTermsCheck": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenType": {
                      "type": "string",
                      "default": "bearer"
                    },
                    "mfaRequired": {
                      "type": "boolean"
                    },
                    "mfaToken": {
                      "type": "string"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaDevices": {
                      "type": "object",
                      "properties": {
                        "webauthn": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "deviceType": {
                                "type": "string",
                                "enum": [
                                  "Platform",
                                  "CrossPlatform"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "deviceType",
                              "name"
                            ]
                          }
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "phoneNumber": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "phoneNumber"
                            ]
                          }
                        },
                        "authenticators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        }
                      },
                      "required": [
                        "webauthn",
                        "phones",
                        "authenticators",
                        "emails"
                      ]
                    },
                    "mfaStrategies": {
                      "type": "object"
                    },
                    "qrCode": {
                      "type": "string"
                    },
                    "recoveryCode": {
                      "type": "string"
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "number"
                    },
                    "expires": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userEmail": {
                      "type": "string"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "isBreachedPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "mfaRequired",
                    "accessToken",
                    "refreshToken",
                    "expiresIn",
                    "expires"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/activate/strategy": {
      "get": {
        "operationId": "UsersActivationControllerV1_getActivationStrategy",
        "summary": "Get user activation strategy",
        "description": "This route gets a user’s activation strategy. The activation strategy tells the vendor whether the user needs to set a password. Send the required userId and activation token in the POST body. For the activation token, see the route under users for generating an activation token. The route returns a Boolean called shouldSetPassword. If it is true, the user needs to to set a password. If it is false, the user does not need to set a password. For instance, SSO users do not set passwords.",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shouldSetPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "shouldSetPassword"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/invitation/accept": {
      "post": {
        "operationId": "UsersTenantManagementControllerV1_acceptInvitation",
        "summary": "Accept invitation",
        "description": "This route accepts an invitation for a user to join a specific tenant. Send the required userId and activation token in the POST body. The userId and activation token appear as a query params in the url Frontegg sends to the user in the activation email.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/signUp": {
      "post": {
        "operationId": "UsersControllerV1_signUpUser",
        "summary": "Signup user",
        "description": "This route is for signing up a new user and new tenant. Send the **`frontegg-vendor-host`** header. This is your domain name in the Frontegg Portal ➜ Workspace Settings ➜ Domains ➜ Domain Name. Send the user's information in the POST body. The user's email, provider, companyName, and metadata are required. The provider is the authentication provider, like local, saml, google, github. See the dropdown for available values. The metadata can be empty, like `{}`. You also can send in the POST body additional information as shown in the example. A vendor token is required for this route, it can be obtained from the vendor authentication route.",
        "parameters": [
          {
            "name": "frontegg-vendor-host",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "local",
                      "saml",
                      "google",
                      "github",
                      "facebook",
                      "microsoft",
                      "scim2",
                      "slack",
                      "apple"
                    ]
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Stringified JSON object. Use the JSON.stringify() method."
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profilePictureUrl": {
                    "type": "string",
                    "maxLength": 4095
                  },
                  "password": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "skipInviteEmail": {
                    "type": "boolean"
                  },
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "emailMetadata": {
                    "type": "object"
                  },
                  "companyName": {
                    "type": "string"
                  },
                  "recaptchaToken": {
                    "type": "string"
                  },
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "provider",
                  "email",
                  "companyName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v3/me": {
      "get": {
        "operationId": "UsersControllerV3_getUserProfile",
        "summary": "Get user profile",
        "description": "This route gets a logged-in user's profile. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "profilePictureUrl": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "mfaEnrolled": {
                      "type": "boolean"
                    },
                    "mfaBypass": {
                      "type": "boolean"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "tenantIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "activatedForTenant": {
                      "type": "boolean"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tenantId": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "vendorId": {
                                  "type": "string"
                                },
                                "tenantId": {
                                  "type": "string"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "isDefault": {
                                  "type": "boolean"
                                },
                                "firstUserRole": {
                                  "type": "boolean"
                                },
                                "level": {
                                  "type": "number"
                                },
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "vendorId",
                                "tenantId",
                                "key",
                                "name",
                                "description",
                                "isDefault",
                                "firstUserRole",
                                "level",
                                "createdAt",
                                "updatedAt",
                                "permissions"
                              ]
                            }
                          },
                          "temporaryExpirationDate": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "tenantId",
                          "roles"
                        ]
                      }
                    },
                    "invisible": {
                      "type": "boolean"
                    },
                    "superUser": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "vendorMetadata": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastLogin": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "subAccountAccessAllowed": {
                      "type": "boolean"
                    },
                    "managedBy": {
                      "enum": [
                        "frontegg",
                        "scim2",
                        "external"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "sub",
                    "verified",
                    "mfaEnrolled",
                    "provider",
                    "tenantId",
                    "tenantIds",
                    "tenants",
                    "metadata",
                    "vendorMetadata",
                    "createdAt",
                    "lastLogin",
                    "subAccountAccessAllowed"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v2/me/tenants": {
      "get": {
        "operationId": "UsersControllerV2_getUserTenants",
        "summary": "Get user tenants",
        "description": "This route gets the list of tenants that a logged-in user belongs to. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tenantId",
                      "name"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v2/me/hierarchy": {
      "get": {
        "operationId": "UsersControllerV2_getUserTenantsHierarchy",
        "summary": "Get user tenants' hierarchy",
        "description": "This route gets the list of tenants with hierarchy metadata that a logged-in user belongs to. If the user is a member of several tenants in a tree some might be reduced. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/me/authorization": {
      "get": {
        "operationId": "UsersControllerV1_getMeAuthorization",
        "summary": "Get user permissions and roles",
        "description": "This route gets the list of permissions and roles that a logged-in user has. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "vendorId": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "firstUserRole": {
                            "type": "boolean"
                          },
                          "level": {
                            "type": "number"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "vendorId",
                          "tenantId",
                          "key",
                          "name",
                          "description",
                          "isDefault",
                          "firstUserRole",
                          "level",
                          "createdAt",
                          "updatedAt",
                          "permissions"
                        ]
                      }
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "roleIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categoryId": {
                            "type": "string"
                          },
                          "fePermission": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "key",
                          "name",
                          "description",
                          "createdAt",
                          "updatedAt",
                          "roleIds",
                          "categoryId",
                          "fePermission"
                        ]
                      }
                    }
                  },
                  "required": [
                    "roles",
                    "permissions"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/v1/me/tenants": {
      "get": {
        "operationId": "UsersControllerV1_getUserTenants",
        "summary": "Get user tenants",
        "description": "This route gets the list of tenants that a logged-in user belongs to. No params required. Mind to use your Frontegg subdomain/custom domain as a host. A user token is required for this route. A user token can be obtained after user authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Self-service | User management"
        ]
      }
    },
    "/resources/users/sessions/v1/me": {
      "get": {
        "operationId": "UserSessionsControllerV1_getActiveSessions",
        "summary": "Get user's active sessions",
        "description": "This route returns all the user's active sessions. Specify the user by sending its ID in frontegg-user-id header.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User sessions"
        ]
      }
    },
    "/resources/users/sessions/v1/me/all": {
      "delete": {
        "operationId": "UserSessionsControllerV1_deleteAllUserActiveSessions",
        "summary": "Delete all user sessions",
        "description": "This route deletes all user's session. Specify the user by sending its ID in frontegg-user-id header.",
        "parameters": [
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User sessions"
        ]
      }
    },
    "/resources/users/sessions/v1/me/{id}": {
      "delete": {
        "operationId": "UserSessionsControllerV1_deleteUserSession",
        "summary": "Delete single user's session",
        "description": "This route deletes user's session. Specify the user by sending its ID in frontegg-user-id header and the session ID in the url param.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "frontegg-user-id",
            "in": "header",
            "description": "The user ID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Self-service | User sessions"
        ]
      }
    }
  },
  "info": {
    "title": "Identity Management",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://{domain}.frontegg.com/identity",
      "variables": {
        "domain": {
          "default": "api"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "PermissionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categoryId": {
            "type": "string"
          },
          "fePermission": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "key",
          "name",
          "description",
          "createdAt",
          "updatedAt",
          "roleIds",
          "categoryId",
          "fePermission"
        ]
      },
      "AddPermissionRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "assignmentType": {
            "type": "string",
            "enum": [
              "NEVER",
              "ALWAYS",
              "ASSIGNABLE"
            ]
          }
        },
        "required": [
          "key",
          "name"
        ]
      },
      "UpdatePermissionRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          }
        }
      },
      "AddRolesToPermissionRequest": {
        "type": "object",
        "properties": {
          "roleIds": {
            "description": "The permission will be assigned to the specified roles",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleIds"
        ]
      },
      "ClassifyPermissionsDto": {
        "type": "object",
        "properties": {
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "NEVER",
              "ALWAYS",
              "ASSIGNABLE"
            ]
          }
        },
        "required": [
          "permissionIds",
          "type"
        ]
      },
      "PermissionCategoryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "feCategory": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "feCategory"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateUserAccessTokenRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "expiresInMinutes": {
            "type": "number",
            "minimum": 1,
            "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
          }
        }
      },
      "UserAccessTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt"
        ]
      },
      "GetUserAccessTokensResponse": {
        "type": "object",
        "properties": {
          "accessTokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "secret": {
                  "type": "string"
                },
                "expires": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "accessTokens"
        ]
      },
      "CreateTenantAccessTokenRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "expiresInMinutes": {
            "type": "number",
            "minimum": 1,
            "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
          },
          "roleIds": {
            "description": "Array of role IDs to attach to the token",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TenantAccessTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "roleIds",
          "createdByUserId"
        ]
      },
      "GetTenantAccessTokensResponse": {
        "type": "object",
        "properties": {
          "accessTokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "secret": {
                  "type": "string"
                },
                "expires": {
                  "format": "date-time",
                  "type": "string"
                },
                "roleIds": {
                  "description": "Array of role ids",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "createdByUserId": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "createdAt",
                "roleIds",
                "createdByUserId"
              ]
            }
          }
        },
        "required": [
          "accessTokens"
        ]
      },
      "AuthUserAccessTokenResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "userId",
          "id",
          "tenantId",
          "permissions",
          "roles"
        ]
      },
      "AuthTenantAccessTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenantId",
          "permissions",
          "roles"
        ]
      },
      "RecoverMfaDto": {
        "type": "object",
        "properties": {
          "recoveryCode": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "recoveryCode",
          "email"
        ]
      },
      "VendorConfigRequest": {
        "type": "object",
        "properties": {
          "defaultTokenExpiration": {
            "type": "number"
          },
          "defaultRefreshTokenExpiration": {
            "type": "number",
            "maximum": 15552000
          },
          "cookieSameSite": {
            "enum": [
              "STRICT",
              "LAX",
              "NONE"
            ],
            "type": "string"
          },
          "machineToMachineAuthStrategy": {
            "enum": [
              "ClientCredentials",
              "AccessToken"
            ],
            "type": "string"
          },
          "allowSignups": {
            "type": "boolean"
          },
          "apiTokensEnabled": {
            "type": "boolean"
          },
          "allowOverridePasswordComplexity": {
            "type": "boolean"
          },
          "allowOverridePasswordExpiration": {
            "type": "boolean"
          },
          "allowOverrideEnforcePasswordHistory": {
            "type": "boolean"
          },
          "jwtAlgorithm": {
            "enum": [
              "HS256",
              "RS256"
            ],
            "type": "string"
          },
          "allowNotVerifiedUsersLogin": {
            "type": "boolean"
          },
          "forcePermissions": {
            "type": "boolean"
          },
          "addSamlAttributesToJwt": {
            "type": "boolean"
          },
          "authStrategy": {
            "enum": [
              "Code",
              "EmailAndPassword",
              "MagicLink",
              "NoLocalAuthentication",
              "SmsCode"
            ],
            "type": "string"
          },
          "defaultPasswordlessTokenExpiration": {
            "type": "number"
          },
          "forceSameDeviceOnAuth": {
            "type": "boolean"
          },
          "allowTenantInvitations": {
            "type": "boolean"
          },
          "rotateRefreshTokens": {
            "type": "boolean"
          },
          "skipTenantValidation": {
            "type": "boolean"
          },
          "addRolesToJwt": {
            "type": "boolean"
          },
          "addPermissionsToJwt": {
            "type": "boolean"
          }
        }
      },
      "VendorConfigResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "defaultTokenExpiration": {
            "type": "number"
          },
          "defaultRefreshTokenExpiration": {
            "type": "number"
          },
          "publicKey": {
            "type": "string"
          },
          "cookieSameSite": {
            "enum": [
              "STRICT",
              "LAX",
              "NONE"
            ],
            "type": "string"
          },
          "allowSignups": {
            "type": "boolean"
          },
          "apiTokensEnabled": {
            "type": "boolean"
          },
          "allowOverridePasswordComplexity": {
            "type": "boolean"
          },
          "allowOverridePasswordExpiration": {
            "type": "boolean"
          },
          "allowOverrideEnforcePasswordHistory": {
            "type": "boolean"
          },
          "jwtAlgorithm": {
            "enum": [
              "RS256",
              "HS256"
            ],
            "type": "string"
          },
          "jwtSecret": {
            "type": "string"
          },
          "allowNotVerifiedUsersLogin": {
            "type": "boolean"
          },
          "forcePermissions": {
            "type": "boolean"
          },
          "authStrategy": {
            "enum": [
              "EmailAndPassword",
              "MagicLink",
              "Code",
              "NoLocalAuthentication",
              "SmsCode"
            ],
            "type": "string"
          },
          "defaultPasswordlessTokenExpiration": {
            "type": "number"
          },
          "forceSameDeviceOnAuth": {
            "type": "boolean"
          },
          "allowTenantInvitations": {
            "type": "boolean"
          },
          "rotateRefreshTokens": {
            "type": "boolean"
          },
          "machineToMachineAuthStrategy": {
            "enum": [
              "ClientCredentials",
              "AccessToken"
            ],
            "type": "string"
          },
          "addRolesToJwt": {
            "type": "boolean"
          },
          "addPermissionsToJwt": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "defaultTokenExpiration",
          "defaultRefreshTokenExpiration",
          "publicKey",
          "cookieSameSite",
          "allowSignups",
          "apiTokensEnabled",
          "allowOverridePasswordComplexity",
          "allowOverridePasswordExpiration",
          "allowOverrideEnforcePasswordHistory",
          "jwtAlgorithm",
          "jwtSecret",
          "allowNotVerifiedUsersLogin",
          "forcePermissions",
          "authStrategy",
          "defaultPasswordlessTokenExpiration",
          "forceSameDeviceOnAuth",
          "allowTenantInvitations",
          "rotateRefreshTokens",
          "machineToMachineAuthStrategy",
          "addRolesToJwt",
          "addPermissionsToJwt"
        ]
      },
      "MfaAuthAppConfig": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "serviceName": {
            "type": "string"
          }
        },
        "required": [
          "active",
          "serviceName"
        ]
      },
      "MfaSmsConfig": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "tokenLifetimeSeconds": {
            "type": "number",
            "minimum": 300
          }
        },
        "required": [
          "active",
          "tokenLifetimeSeconds"
        ]
      },
      "MfaEmailConfig": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "tokenLifetimeSeconds": {
            "type": "number",
            "minimum": 300
          },
          "sender": {
            "type": "string"
          }
        },
        "required": [
          "active",
          "tokenLifetimeSeconds",
          "sender"
        ]
      },
      "MfaConfigRequest": {
        "type": "object",
        "properties": {
          "authenticationApp": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "serviceName": {
                "type": "string"
              }
            },
            "required": [
              "active",
              "serviceName"
            ]
          },
          "sms": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "tokenLifetimeSeconds": {
                "type": "number",
                "minimum": 300
              }
            },
            "required": [
              "active",
              "tokenLifetimeSeconds"
            ]
          },
          "email": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "tokenLifetimeSeconds": {
                "type": "number",
                "minimum": 300
              },
              "sender": {
                "type": "string"
              }
            },
            "required": [
              "active",
              "tokenLifetimeSeconds",
              "sender"
            ]
          }
        }
      },
      "AuthenticationAppConfiguration": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "serviceName": {
            "type": "string"
          }
        },
        "required": [
          "active",
          "serviceName"
        ]
      },
      "SmsConfiguration": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "tokenLifetimeSeconds": {
            "type": "number"
          }
        },
        "required": [
          "active",
          "tokenLifetimeSeconds"
        ]
      },
      "EmailConfiguration": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "tokenLifetimeSeconds": {
            "type": "number"
          },
          "sender": {
            "type": "string"
          }
        },
        "required": [
          "active",
          "tokenLifetimeSeconds",
          "sender"
        ]
      },
      "MfaConfigResponse": {
        "type": "object",
        "properties": {
          "authenticationApp": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "serviceName": {
                "type": "string"
              }
            },
            "required": [
              "active",
              "serviceName"
            ]
          },
          "sms": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "tokenLifetimeSeconds": {
                "type": "number"
              }
            },
            "required": [
              "active",
              "tokenLifetimeSeconds"
            ]
          },
          "email": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "tokenLifetimeSeconds": {
                "type": "number"
              },
              "sender": {
                "type": "string"
              }
            },
            "required": [
              "active",
              "tokenLifetimeSeconds",
              "sender"
            ]
          }
        },
        "required": [
          "authenticationApp",
          "sms",
          "email"
        ]
      },
      "PasswordConfigRequest": {
        "type": "object",
        "properties": {
          "allowPassphrases": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "minPhraseLength": {
            "type": "number"
          },
          "minOptionalTestsToPass": {
            "type": "number"
          },
          "blockPwnedPasswords": {
            "type": "boolean"
          }
        }
      },
      "PasswordConfigResponse": {
        "type": "object",
        "properties": {
          "allowPassphrases": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "number"
          },
          "minLength": {
            "type": "number"
          },
          "minPhraseLength": {
            "type": "number"
          },
          "minOptionalTestsToPass": {
            "type": "number"
          },
          "blockPwnedPasswords": {
            "type": "boolean"
          }
        },
        "required": [
          "blockPwnedPasswords"
        ]
      },
      "MfaPolicyRequest": {
        "type": "object",
        "properties": {
          "enforceMFAType": {
            "type": "string",
            "enum": [
              "DontForce",
              "Force",
              "ForceExceptSAML"
            ],
            "description": "Determine whether MFA should be enforced.",
            "default": "Force"
          },
          "allowRememberMyDevice": {
            "type": "boolean",
            "description": "Determine whether devices can be remembered and authentication can be skipped.",
            "default": false
          },
          "mfaDeviceExpiration": {
            "type": "number",
            "description": "Expiration time of device in seconds",
            "default": 1209600
          }
        }
      },
      "MfaPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "enforceMFAType": {
            "type": "string"
          },
          "allowRememberMyDevice": {
            "type": "boolean"
          },
          "mfaDeviceExpiration": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "allowRememberMyDevice",
          "mfaDeviceExpiration",
          "createdAt",
          "updatedAt"
        ]
      },
      "LockoutPolicyRequest": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Determine whether the Lockout Policy is enabled"
          },
          "maxAttempts": {
            "type": "number",
            "description": "The number of the maximum login attempts user can do",
            "minimum": 1
          }
        },
        "required": [
          "enabled",
          "maxAttempts"
        ]
      },
      "LockoutPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "maxAttempts": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "maxAttempts",
          "createdAt",
          "updatedAt"
        ]
      },
      "PasswordHistoryPolicyRequest": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Detemine whether the history policy is enbaled.",
            "default": false
          },
          "historySize": {
            "type": "number",
            "description": "Number of passwords per user to remember in the history.",
            "maximum": 10,
            "minimum": 1,
            "default": 1
          }
        },
        "required": [
          "enabled",
          "historySize"
        ]
      },
      "PasswordHistoryPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "historySize": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "historySize",
          "createdAt",
          "updatedAt"
        ]
      },
      "CaptchaPolicyRequest": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "siteKey": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          },
          "minScore": {
            "type": "number"
          },
          "ignoredEmails": {
            "description": "Captcha validation will be skipped for those emails.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "enabled",
          "siteKey",
          "secretKey",
          "minScore"
        ]
      },
      "CaptchaPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteKey": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "minScore": {
            "type": "number"
          },
          "ignoredEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "siteKey",
          "secretKey",
          "enabled",
          "minScore",
          "ignoredEmails",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateTemplateDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ResetPassword",
              "ActivateUser",
              "InviteToTenant",
              "PwnedPassword",
              "MagicLink",
              "OTC",
              "ConnectNewDevice",
              "UserUsedInvitation",
              "ResetPhoneNumber",
              "BulkInvitesToTenant",
              "MFAEnroll",
              "MFAUnenroll",
              "NewMFAMethod",
              "MFARecoveryCode",
              "RemoveMFAMethod",
              "EmailVerification",
              "BruteForceProtection",
              "SuspiciousIP",
              "MFAOTC",
              "ImpossibleTravel",
              "BotDetection",
              "SmsAuthenticationEnabled"
            ]
          },
          "senderEmail": {
            "type": "string"
          },
          "redirectURL": {
            "type": "string",
            "description": "Only required for: ResetPassword, ActivateUser, InviteToTenant, MagicLink, BulkInvitesToTenant"
          },
          "htmlTemplate": {
            "type": "string",
            "maxLength": 100000
          },
          "subject": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "successRedirectUrl": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "GetTemplateResponseDto": {
        "type": "object",
        "properties": {
          "htmlTemplate": {
            "type": "string"
          },
          "senderEmail": {
            "type": "string"
          },
          "redirectURL": {
            "type": "string"
          },
          "successRedirectUrl": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "fromName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "type": {
            "type": "object"
          },
          "redirectURLPattern": {
            "type": "string"
          },
          "successRedirectUrlPattern": {
            "type": "string"
          }
        },
        "required": [
          "htmlTemplate",
          "senderEmail",
          "redirectURL",
          "successRedirectUrl",
          "subject",
          "fromName",
          "active",
          "type"
        ]
      },
      "CreateOrUpdateMailConfigRequestDto": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          }
        },
        "required": [
          "secret"
        ]
      },
      "GetMailConfigResponseDto": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "secret",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateTenantApiTokenDto": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "description": {
            "type": "string"
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissionIds": {
            "description": "Array of permission ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateTenantApiTokenResponseDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "permissionIds": {
            "description": "Array of permission ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "description",
          "tenantId",
          "secret",
          "createdByUserId",
          "metadata",
          "createdAt"
        ]
      },
      "GetTenantApiTokensResponse": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "permissionIds": {
            "description": "Array of permission ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "description",
          "tenantId",
          "createdByUserId",
          "metadata",
          "createdAt",
          "permissionIds",
          "roleIds",
          "expires"
        ]
      },
      "UpdateApiTokenDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissionIds": {
            "description": "Array of permission ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateTenantApiTokenResponseDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "permissionIds": {
            "description": "Array of permission ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roleIds": {
            "description": "Array of role ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "description",
          "tenantId",
          "createdByUserId",
          "metadata",
          "createdAt"
        ]
      },
      "CreateUserApiTokenDto": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "description": {
            "type": "string"
          },
          "expiresInMinutes": {
            "type": "number",
            "minimum": 1,
            "maximum": 5256000,
            "description": "Token expiration time in minutes. In case of undefined, the token won't be expired"
          }
        }
      },
      "CreateUserApiTokenResponseDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "description",
          "metadata",
          "createdAt",
          "secret"
        ]
      },
      "GetUserApiTokensResponseDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "description": "Extra data that will be encoded as part of the JWT"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "description",
          "metadata",
          "createdAt"
        ]
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "firstUserRole": {
            "type": "boolean"
          },
          "level": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "vendorId",
          "tenantId",
          "key",
          "name",
          "description",
          "isDefault",
          "firstUserRole",
          "level",
          "createdAt",
          "updatedAt",
          "permissions"
        ]
      },
      "UserTenantDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "firstUserRole": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "vendorId",
                "tenantId",
                "key",
                "name",
                "description",
                "isDefault",
                "firstUserRole",
                "level",
                "createdAt",
                "updatedAt",
                "permissions"
              ]
            }
          },
          "temporaryExpirationDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenantId",
          "roles"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "mfaEnrolled": {
            "type": "boolean"
          },
          "mfaBypass": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "firstUserRole": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "vendorId",
                "tenantId",
                "key",
                "name",
                "description",
                "isDefault",
                "firstUserRole",
                "level",
                "createdAt",
                "updatedAt",
                "permissions"
              ]
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "categoryId": {
                  "type": "string"
                },
                "fePermission": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "key",
                "name",
                "description",
                "createdAt",
                "updatedAt",
                "roleIds",
                "categoryId",
                "fePermission"
              ]
            }
          },
          "provider": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "tenantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activatedForTenant": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "firstUserRole": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "key",
                      "name",
                      "description",
                      "isDefault",
                      "firstUserRole",
                      "level",
                      "createdAt",
                      "updatedAt",
                      "permissions"
                    ]
                  }
                },
                "temporaryExpirationDate": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "tenantId",
                "roles"
              ]
            }
          },
          "invisible": {
            "type": "boolean"
          },
          "superUser": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string"
          },
          "vendorMetadata": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "subAccountAccessAllowed": {
            "type": "boolean"
          },
          "managedBy": {
            "enum": [
              "frontegg",
              "scim2",
              "external"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "sub",
          "verified",
          "mfaEnrolled",
          "roles",
          "permissions",
          "provider",
          "tenantId",
          "tenantIds",
          "tenants",
          "metadata",
          "vendorMetadata",
          "createdAt",
          "lastLogin",
          "subAccountAccessAllowed"
        ]
      },
      "ValidateUserPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ValidateUserPasswordResponse": {
        "type": "object",
        "properties": {}
      },
      "CreateUserDtoVendorOnly": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object"
          },
          "vendorMetadata": {
            "type": "string",
            "description": "Extra vendor-only data. stringified JSON object"
          },
          "roleIds": {
            "description": "Role IDs to assign to the user",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tenantId": {
            "type": "string"
          },
          "expirationInSeconds": {
            "type": "number",
            "description": "Temporary user expiration in seconds"
          },
          "mfaBypass": {
            "type": "boolean",
            "description": "Bypass MFA for this user"
          }
        },
        "required": [
          "email",
          "tenantId"
        ]
      },
      "CreateInviteTokenRequest": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expiresInMinutes": {
            "type": "number"
          },
          "shouldSendEmail": {
            "type": "boolean"
          }
        },
        "required": [
          "tenantId"
        ]
      },
      "InviteTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "format": "date-time",
            "type": "string"
          },
          "shouldSendEmail": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "vendorId",
          "tenantId",
          "token",
          "expires",
          "shouldSendEmail"
        ]
      },
      "CreateInviteTokenRequestForUser": {
        "type": "object",
        "properties": {
          "expiresInMinutes": {
            "type": "number"
          },
          "shouldSendEmail": {
            "type": "boolean"
          }
        },
        "required": [
          "expiresInMinutes",
          "shouldSendEmail"
        ]
      },
      "UpdateInviteTokenRequest": {
        "type": "object",
        "properties": {
          "expiresInMinutes": {
            "type": "number"
          },
          "shouldSendEmail": {
            "type": "boolean"
          }
        }
      },
      "VerifyInviteTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "InvitationConfigurationResponse": {
        "type": "object",
        "properties": {
          "tenantInvitationsAllowed": {
            "type": "boolean"
          },
          "emailsEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "tenantInvitationsAllowed",
          "emailsEnabled"
        ]
      },
      "SessionIdleTimeoutConfigurationDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "timeout": {
            "type": "number",
            "minimum": 60,
            "maximum": 2073600
          }
        },
        "required": [
          "isActive",
          "timeout"
        ]
      },
      "SessionTimeoutConfigurationDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "timeout": {
            "type": "number",
            "minimum": 60
          }
        },
        "required": [
          "isActive",
          "timeout"
        ]
      },
      "SessionConcurrentConfigurationDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "maxSessions": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "isActive",
          "maxSessions"
        ]
      },
      "CreateSessionConfigurationRequest": {
        "type": "object",
        "properties": {
          "sessionIdleTimeoutConfiguration": {
            "type": "object",
            "properties": {
              "isActive": {
                "type": "boolean"
              },
              "timeout": {
                "type": "number",
                "minimum": 60,
                "maximum": 2073600
              }
            },
            "required": [
              "isActive",
              "timeout"
            ]
          },
          "sessionTimeoutConfiguration": {
            "type": "object",
            "properties": {
              "isActive": {
                "type": "boolean"
              },
              "timeout": {
                "type": "number",
                "minimum": 60
              }
            },
            "required": [
              "isActive",
              "timeout"
            ]
          },
          "sessionConcurrentConfiguration": {
            "type": "object",
            "properties": {
              "isActive": {
                "type": "boolean"
              },
              "maxSessions": {
                "type": "number",
                "minimum": 1
              }
            },
            "required": [
              "isActive",
              "maxSessions"
            ]
          }
        }
      },
      "CreateOrUpdateMFAStrategyRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "strategy": {
            "type": "string",
            "enum": [
              "AuthenticatorApp",
              "WebAuthnPlatform",
              "WebAuthnCrossPlatform",
              "SMS"
            ]
          }
        },
        "required": [
          "isActive",
          "strategy"
        ]
      },
      "GetGroupsDto": {
        "type": "object",
        "properties": {
          "groupsIds": {
            "description": "Group IDs",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "groupsIds"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "description": "Color for group display"
          },
          "description": {
            "type": "string",
            "description": "Group description"
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "name": {
            "type": "string",
            "description": "Group unique name"
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "firstUserRole": {
            "type": "boolean"
          },
          "level": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "vendorId",
          "tenantId",
          "key",
          "name",
          "description",
          "isDefault",
          "firstUserRole",
          "level",
          "createdAt",
          "updatedAt"
        ]
      },
      "GroupUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "activatedForTenant": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "profilePictureUrl",
          "createdAt",
          "activatedForTenant"
        ]
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "firstUserRole": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "vendorId",
                "tenantId",
                "key",
                "name",
                "description",
                "isDefault",
                "firstUserRole",
                "level",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "profilePictureUrl": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "activatedForTenant": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "email",
                "name",
                "profilePictureUrl",
                "createdAt",
                "activatedForTenant"
              ]
            }
          },
          "managedBy": {
            "enum": [
              "frontegg",
              "scim2"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "color",
          "description",
          "metadata",
          "roles",
          "users",
          "managedBy"
        ]
      },
      "UpdateGroupDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "description": "Color for group display"
          },
          "description": {
            "type": "string",
            "description": "Group description"
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "name": {
            "type": "string",
            "description": "Group unique name"
          }
        }
      },
      "CreateOrUpdateGroupConfigurationDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Determine whether groups are enabled/disabled. Default value is true.",
            "default": true
          },
          "rolesEnabled": {
            "type": "boolean",
            "description": "Determine whether groups can have roles or not. Default value is true.",
            "default": true
          }
        }
      },
      "UpdateRolesOnGroupDto": {
        "type": "object",
        "properties": {
          "roleIds": {
            "description": "Will add / remove requested roles from the group",
            "example": [
              "5fbae0d3-a3b7-4b1e-8d64-6c9428f84aae",
              "8b2d0f9a-f39e-49b3-98ca-93c85c06d1a7"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleIds"
        ]
      },
      "UpdateUsersOnGroupDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "description": "An array of User IDs to add / remove existing users to / from the group.",
            "example": [
              "262io276-3c5v-9y31-ba03-281674a89d4c",
              "eeooc819-87dd-1cdd-b81d-e8829vm9d684"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ]
      },
      "TenantStatus": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PendingInvitation",
              "PendingLogin",
              "Activated",
              "NotActivated"
            ]
          }
        },
        "required": [
          "tenantId",
          "status"
        ]
      },
      "UserTenantStatusesResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "tenantsStatuses": {
            "description": "Tenants Statuses",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PendingInvitation",
                    "PendingLogin",
                    "Activated",
                    "NotActivated"
                  ]
                }
              },
              "required": [
                "tenantId",
                "status"
              ]
            }
          }
        },
        "required": [
          "userId",
          "tenantsStatuses"
        ]
      },
      "AddRoleRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "description": "This role will be assigned for every user that will be added without specified roles"
          },
          "migrateRole": {
            "type": "boolean",
            "description": "Set this property to `true` together with `isDefault` in order to assign this role to all users"
          },
          "firstUserRole": {
            "type": "boolean",
            "description": "This role will be assigned to the first user of a tenant (new tenants only)"
          },
          "level": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767,
            "description": "Role level for roles elevation, lower level means stronger role."
          }
        },
        "required": [
          "key",
          "name",
          "level"
        ]
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "isDefault": {
            "type": "boolean",
            "description": "This role will be assigned for every user that will be added without specified roles"
          },
          "firstUserRole": {
            "type": "boolean",
            "description": "This role will be assigned to the first user of a tenant (new tenants only)"
          },
          "migrateRole": {
            "type": "boolean",
            "description": "Set this property to `true` together with `isDefault` in order to assign this role to all users"
          },
          "level": {
            "type": "number",
            "minimum": 0,
            "maximum": 32767,
            "description": "Role level for roles elevation, lower level means stronger role."
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AddPermissionToRoleRequest": {
        "type": "object",
        "properties": {
          "permissionIds": {
            "description": "Set permission ids to attach to the role",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "permissionIds"
        ]
      },
      "AddRoleWithPermissionsRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean",
            "description": "This role will be assigned for every user that will be added without specified roles"
          },
          "baseRoleId": {
            "type": "string",
            "description": "Role level of the new role will be based on this parameter"
          },
          "permissionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "key",
          "name",
          "baseRoleId",
          "permissionIds"
        ]
      },
      "AddRoleWithPermissionsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "vendorId",
          "tenantId",
          "key",
          "name",
          "description",
          "isDefault",
          "permissions"
        ]
      },
      "TemporaryUserDto": {
        "type": "object",
        "properties": {
          "expirationInSeconds": {
            "type": "number",
            "minimum": 300
          }
        },
        "required": [
          "expirationInSeconds"
        ]
      },
      "TemporaryUsersConfigurationDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "UserBulkInviteRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string",
            "maxLength": 4095
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "default": "local",
            "enum": [
              "local",
              "saml",
              "google",
              "github",
              "facebook",
              "microsoft",
              "scim2",
              "slack",
              "apple"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "skipInviteEmail": {
            "type": "boolean"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "emailMetadata": {
            "type": "object"
          },
          "expirationInSeconds": {
            "type": "number",
            "minimum": 300,
            "description": "Temporary user expiration in seconds"
          },
          "verified": {
            "type": "boolean"
          }
        },
        "required": [
          "email"
        ]
      },
      "UsersBulkInviteRequestDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "name": {
                  "type": "string"
                },
                "profilePictureUrl": {
                  "type": "string",
                  "maxLength": 4095
                },
                "password": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "provider": {
                  "type": "string",
                  "default": "local",
                  "enum": [
                    "local",
                    "saml",
                    "google",
                    "github",
                    "facebook",
                    "microsoft",
                    "scim2",
                    "slack",
                    "apple"
                  ]
                },
                "metadata": {
                  "type": "string",
                  "description": "Stringified JSON object",
                  "example": "{}"
                },
                "skipInviteEmail": {
                  "type": "boolean"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "emailMetadata": {
                  "type": "object"
                },
                "expirationInSeconds": {
                  "type": "number",
                  "minimum": 300,
                  "description": "Temporary user expiration in seconds"
                },
                "verified": {
                  "type": "boolean"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        },
        "required": [
          "users"
        ]
      },
      "TaskContext": {
        "type": "object",
        "properties": {}
      },
      "Auth0Configuration": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "tenantIdFieldName": {
            "type": "string",
            "description": "The field name that the tenant ID will be taken from under app metadata"
          },
          "isTenantIdOnUserMetadata": {
            "type": "boolean",
            "description": "If you would like to take tenant ID from user metadata, set this field to true"
          }
        },
        "required": [
          "domain",
          "clientId",
          "secret",
          "tenantIdFieldName"
        ]
      },
      "PasswordHashingType": {
        "type": "string",
        "enum": [
          "bcrypt",
          "scrypt",
          "firebase-scrypt",
          "pbkdf2",
          "argon2"
        ]
      },
      "MigrateUserRequest": {
        "type": "object",
        "properties": {
          "passwordHash": {
            "type": "string",
            "description": "The password hash. For SCrypt should include the salt and key seperated by the salt separator"
          },
          "passwordHashType": {
            "type": "string",
            "enum": [
              "bcrypt",
              "scrypt",
              "firebase-scrypt",
              "pbkdf2",
              "argon2"
            ]
          },
          "passwordHashConfig": {
            "type": "string",
            "maxLength": 4095,
            "description": "Stringified JSON Hashing config for the migrated password. For SCrypt should be formatted as { saltSeparator, N, r, p, keyLen }. For FirebaseScrypt should be formatted as { memCost, rounds, saltSeparator, signerKey }"
          },
          "phoneNumber": {
            "type": "string",
            "description": "phoneNumber can be used both for login with SMS and for MFAThis auto-enrolls the user in MFA, prompting them at first login (regardless of tenant/vendor MFA settings).The required format is an area code + number, no spaces. For example: \"+16037184056\"The number must be unique"
          },
          "provider": {
            "type": "string",
            "enum": [
              "local",
              "saml",
              "google",
              "github",
              "facebook",
              "microsoft",
              "scim2",
              "slack",
              "apple"
            ],
            "default": "local"
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object"
          },
          "verifyUser": {
            "type": "boolean",
            "default": false,
            "description": "Whether to verify the user as part of the migration process. If this is set to false, another call is required for the verify user API"
          },
          "roleIds": {
            "default": [],
            "description": "Role ids of the migrated users. If not provided, the user will be assigned the default roles",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string",
            "maxLength": 4095
          },
          "authenticatorAppMfaSecret": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "tenantId"
        ]
      },
      "MigrateUsersRequest": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "passwordHash": {
                  "type": "string",
                  "description": "The password hash. For SCrypt should include the salt and key seperated by the salt separator"
                },
                "passwordHashType": {
                  "type": "string",
                  "enum": [
                    "bcrypt",
                    "scrypt",
                    "firebase-scrypt",
                    "pbkdf2",
                    "argon2"
                  ]
                },
                "passwordHashConfig": {
                  "type": "string",
                  "maxLength": 4095,
                  "description": "Stringified JSON Hashing config for the migrated password. For SCrypt should be formatted as { saltSeparator, N, r, p, keyLen }. For FirebaseScrypt should be formatted as { memCost, rounds, saltSeparator, signerKey }"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "phoneNumber can be used both for login with SMS and for MFAThis auto-enrolls the user in MFA, prompting them at first login (regardless of tenant/vendor MFA settings).The required format is an area code + number, no spaces. For example: \"+16037184056\"The number must be unique"
                },
                "provider": {
                  "type": "string",
                  "enum": [
                    "local",
                    "saml",
                    "google",
                    "github",
                    "facebook",
                    "microsoft",
                    "scim2",
                    "slack",
                    "apple"
                  ],
                  "default": "local"
                },
                "metadata": {
                  "type": "string",
                  "description": "Stringified JSON object"
                },
                "verifyUser": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to verify the user as part of the migration process. If this is set to false, another call is required for the verify user API"
                },
                "roleIds": {
                  "default": [],
                  "description": "Role ids of the migrated users. If not provided, the user will be assigned the default roles",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "email": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "profilePictureUrl": {
                  "type": "string",
                  "maxLength": 4095
                },
                "authenticatorAppMfaSecret": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "tenantId"
              ]
            }
          }
        },
        "required": [
          "users"
        ]
      },
      "MigrationContext": {
        "type": "object",
        "properties": {
          "migrationId": {
            "type": "string"
          }
        },
        "required": [
          "migrationId"
        ]
      },
      "MigrationObject": {
        "type": "object",
        "properties": {}
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "emailMetadata": {
            "type": "object"
          }
        },
        "required": [
          "email"
        ]
      },
      "VerifyPasswordDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "token",
          "password"
        ]
      },
      "UpdateUserPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "newPassword"
        ]
      },
      "ResetActivationTokenDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "emailMetadata": {
            "type": "object"
          }
        },
        "required": [
          "email",
          "emailMetadata"
        ]
      },
      "CreateCustomSsoRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "userInfoUrl": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "ssoLogoUrl": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        },
        "required": [
          "type",
          "clientId",
          "secret",
          "redirectUrl",
          "authorizationUrl",
          "tokenUrl",
          "userInfoUrl",
          "scopes",
          "ssoLogoUrl",
          "displayName",
          "active"
        ]
      },
      "UpdateCustomSsoRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "userInfoUrl": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "ssoLogoUrl": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "UserApplicationsResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userId",
          "appIds"
        ]
      },
      "ApplicationUsersResponseDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "appId",
          "userIds"
        ]
      },
      "AssignUsersToAppRequestDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "appId",
          "tenantId",
          "userIds"
        ]
      },
      "ApplicationUserTenantsResponseDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "appId",
          "userTenantId",
          "createdAt"
        ]
      },
      "AssignUserToMultipleApplicationsRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userId",
          "tenantId",
          "appIds"
        ]
      },
      "UnassignUsersFromAppRequestDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "appId",
          "tenantId",
          "userIds"
        ]
      },
      "UnassignUserFromMultipleAppsRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userId",
          "tenantId",
          "appIds"
        ]
      },
      "UserApplicationActiveTenantResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          }
        },
        "required": [
          "tenantId",
          "applicationId"
        ]
      },
      "UserApplicationActiveTenantsResponseDto": {
        "type": "object",
        "properties": {
          "applicationActiveTenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "applicationId": {
                  "type": "string"
                }
              },
              "required": [
                "tenantId",
                "applicationId"
              ]
            }
          }
        },
        "required": [
          "applicationActiveTenants"
        ]
      },
      "SwitchApplicationActiveUserTenantDto": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "Desired application to set active tenant in"
          },
          "tenantId": {
            "type": "string",
            "description": "Desired tenant to set as active tenant for user in application"
          }
        },
        "required": [
          "applicationId",
          "tenantId"
        ]
      },
      "SwitchApplicationActiveUserTenantsRequestDto": {
        "type": "object",
        "properties": {
          "activeApplicationTenants": {
            "description": "List of applications and tenants to set as active, for user",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "applicationId": {
                  "type": "string",
                  "description": "Desired application to set active tenant in"
                },
                "tenantId": {
                  "type": "string",
                  "description": "Desired tenant to set as active tenant for user in application"
                }
              },
              "required": [
                "applicationId",
                "tenantId"
              ]
            }
          }
        },
        "required": [
          "activeApplicationTenants"
        ]
      },
      "GetDelegationConfigurationResponseDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether delegation has been enabled or disabled.",
            "example": "true"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "CreateDelegationConfigurationRequestDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Used to enable or disable delegation for access tokens created using Token Exchange.",
            "example": "true"
          }
        }
      },
      "DisableMFAAuthAppRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "RequestDisableMFARequest": {
        "type": "object",
        "properties": {}
      },
      "RequestDisableMFASMSResponse": {
        "type": "object",
        "properties": {}
      },
      "DisableMFASMSRequest": {
        "type": "object",
        "properties": {
          "otcToken": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "otcToken",
          "code"
        ]
      },
      "ResetTenantInvitationDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserV3Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "mfaEnrolled": {
            "type": "boolean"
          },
          "mfaBypass": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "tenantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activatedForTenant": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "firstUserRole": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "key",
                      "name",
                      "description",
                      "isDefault",
                      "firstUserRole",
                      "level",
                      "createdAt",
                      "updatedAt",
                      "permissions"
                    ]
                  }
                },
                "temporaryExpirationDate": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "tenantId",
                "roles"
              ]
            }
          },
          "invisible": {
            "type": "boolean"
          },
          "superUser": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string"
          },
          "vendorMetadata": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string"
          },
          "subAccountAccessAllowed": {
            "type": "boolean"
          },
          "managedBy": {
            "enum": [
              "frontegg",
              "scim2",
              "external"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "sub",
          "verified",
          "mfaEnrolled",
          "provider",
          "tenantId",
          "tenantIds",
          "tenants",
          "metadata",
          "vendorMetadata",
          "createdAt",
          "lastLogin",
          "subAccountAccessAllowed"
        ]
      },
      "GetUserRolesResponse": {
        "type": "object",
        "properties": {}
      },
      "GetUserGroupsResponse": {
        "type": "object",
        "properties": {}
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string",
            "maxLength": 4095
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "default": "local",
            "enum": [
              "local",
              "saml",
              "google",
              "github",
              "facebook",
              "microsoft",
              "scim2",
              "slack",
              "apple"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "skipInviteEmail": {
            "type": "boolean"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "emailMetadata": {
            "type": "object"
          },
          "expirationInSeconds": {
            "type": "number",
            "minimum": 300,
            "description": "Temporary user expiration in seconds"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserCreatedResponse": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]{1}(\\-?)(([0-9])(\\-?)){5,13}(([0-9]$){1})"
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true,
            "maxLength": 4095
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CoreUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "mfaEnrolled": {
            "type": "boolean"
          },
          "mfaBypass": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "tenantIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activatedForTenant": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendorId": {
                        "type": "string"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "firstUserRole": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "vendorId",
                      "tenantId",
                      "key",
                      "name",
                      "description",
                      "isDefault",
                      "firstUserRole",
                      "level",
                      "createdAt",
                      "updatedAt",
                      "permissions"
                    ]
                  }
                },
                "temporaryExpirationDate": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "tenantId",
                "roles"
              ]
            }
          },
          "invisible": {
            "type": "boolean"
          },
          "superUser": {
            "type": "boolean"
          },
          "metadata": {
            "type": "string"
          },
          "vendorMetadata": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string"
          },
          "subAccountAccessAllowed": {
            "type": "boolean"
          },
          "managedBy": {
            "type": "string",
            "enum": [
              "frontegg",
              "scim2",
              "external"
            ]
          }
        },
        "required": [
          "id",
          "email",
          "sub",
          "verified",
          "mfaEnrolled",
          "provider",
          "tenantId",
          "tenantIds",
          "tenants",
          "metadata",
          "vendorMetadata",
          "createdAt",
          "lastLogin",
          "subAccountAccessAllowed"
        ]
      },
      "AssignUserToRolesDto": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleIds"
        ]
      },
      "IRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "level": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "key",
          "name",
          "description",
          "isDefault",
          "level",
          "createdAt"
        ]
      },
      "AssignUserToRolesResponseDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "key",
                "name",
                "description",
                "isDefault",
                "level",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "tenantId",
          "userId",
          "roles"
        ]
      },
      "UnassignUserFromRolesDto": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleIds"
        ]
      },
      "DeleteUserToRolesResponseDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "key",
                "name",
                "description",
                "isDefault",
                "level",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "tenantId",
          "userId",
          "roles"
        ]
      },
      "UpdateUserTenantDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "description": "Desired tenant to set as active tenant for user"
          }
        },
        "required": [
          "tenantId"
        ]
      },
      "UpdateUserInvisibleDto": {
        "type": "object",
        "properties": {
          "invisible": {
            "type": "boolean"
          }
        },
        "required": [
          "invisible"
        ]
      },
      "UpdateUserSuperuserDto": {
        "type": "object",
        "properties": {
          "superUser": {
            "type": "boolean"
          }
        },
        "required": [
          "superUser"
        ]
      },
      "UpdateVendorUserDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "^\\+[1-9]{1}(\\-?)(([0-9])(\\-?)){5,13}(([0-9]$){1})"
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true,
            "maxLength": 4095
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object",
            "example": "{}"
          },
          "vendorMetadata": {
            "type": "string",
            "description": "Extra vendor-only data. stringified JSON object"
          },
          "mfaBypass": {
            "type": "boolean",
            "description": "Indicates whether MFA should be bypassed for this user"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateUserTenantWithValidationDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "description": "Desired tenant to set as active tenant for user"
          },
          "validateTenantExist": {
            "type": "boolean"
          }
        },
        "required": [
          "tenantId"
        ]
      },
      "AddUserToTenantRequest": {
        "type": "object",
        "properties": {
          "validateTenantExist": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "string"
          },
          "skipInviteEmail": {
            "type": "boolean"
          }
        },
        "required": [
          "tenantId"
        ]
      },
      "UpdateUserEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "GenerateUserActivationLinkResponseDto": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "link",
          "token",
          "userId"
        ]
      },
      "GenerateUserResetPasswordLinkResponseDto": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "link",
          "token",
          "userId"
        ]
      },
      "MigrateUsersFromTenantToTenantRequest": {
        "type": "object",
        "properties": {
          "srcTenantId": {
            "type": "string"
          },
          "targetTenantId": {
            "type": "string"
          }
        },
        "required": [
          "srcTenantId",
          "targetTenantId"
        ]
      },
      "GetUserSourceExtendedResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "number"
          },
          "configuration": {
            "type": "object"
          },
          "usersCount": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "description",
          "appIds",
          "index",
          "configuration",
          "usersCount"
        ]
      },
      "ExternalAuth0UserSourceConfig": {
        "type": "object",
        "properties": {
          "syncOnLogin": {
            "type": "boolean",
            "description": "Whether to sync user profile attributes on each login"
          },
          "isMigrated": {
            "type": "boolean",
            "description": "Whether to migrate the users"
          },
          "domain": {
            "type": "string",
            "description": "the auth0 domain"
          },
          "clientId": {
            "type": "string",
            "description": "the auth0 application clientId"
          },
          "secret": {
            "type": "string",
            "description": "the auth0 application secret"
          },
          "tenantIdFieldName": {
            "type": "string",
            "description": "the tenant id field name in the user's app_metadata"
          }
        },
        "required": [
          "syncOnLogin",
          "isMigrated",
          "domain",
          "clientId",
          "secret",
          "tenantIdFieldName"
        ]
      },
      "CreateAuth0ExternalUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "domain": {
                    "type": "string",
                    "description": "the auth0 domain"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "the auth0 application clientId"
                  },
                  "secret": {
                    "type": "string",
                    "description": "the auth0 application secret"
                  },
                  "tenantIdFieldName": {
                    "type": "string",
                    "description": "the tenant id field name in the user's app_metadata"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "domain",
                  "clientId",
                  "secret",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        },
        "required": [
          "name",
          "configuration",
          "index"
        ]
      },
      "CreateUserSourceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "appIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "index": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "appIds",
          "description",
          "index"
        ]
      },
      "ExternalCognitoUserSourceConfig": {
        "type": "object",
        "properties": {
          "syncOnLogin": {
            "type": "boolean",
            "description": "Whether to sync user profile attributes on each login"
          },
          "isMigrated": {
            "type": "boolean",
            "description": "Whether to migrate the users"
          },
          "region": {
            "type": "string",
            "description": "The aws region of the cognito user pool"
          },
          "clientId": {
            "type": "string",
            "description": "The cognito app client id"
          },
          "userPoolId": {
            "type": "string",
            "description": "The id of the cognito user pool"
          },
          "accessKeyId": {
            "type": "string",
            "description": "The access key of the aws account"
          },
          "secretAccessKey": {
            "type": "string",
            "description": "The secret of the aws account"
          },
          "tenantIdFieldName": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string",
            "description": "The cognito application client secret, required if the app client is configured with a client secret"
          }
        },
        "required": [
          "syncOnLogin",
          "isMigrated",
          "region",
          "clientId",
          "userPoolId",
          "accessKeyId",
          "secretAccessKey",
          "tenantIdFieldName"
        ]
      },
      "CreateCognitoExternalUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "region": {
                    "type": "string",
                    "description": "The aws region of the cognito user pool"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The cognito app client id"
                  },
                  "userPoolId": {
                    "type": "string",
                    "description": "The id of the cognito user pool"
                  },
                  "accessKeyId": {
                    "type": "string",
                    "description": "The access key of the aws account"
                  },
                  "secretAccessKey": {
                    "type": "string",
                    "description": "The secret of the aws account"
                  },
                  "tenantIdFieldName": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string",
                    "description": "The cognito application client secret, required if the app client is configured with a client secret"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "region",
                  "clientId",
                  "userPoolId",
                  "accessKeyId",
                  "secretAccessKey",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        },
        "required": [
          "name",
          "configuration",
          "index"
        ]
      },
      "ExternalCustomCodeUserSourceConfig": {
        "type": "object",
        "properties": {
          "syncOnLogin": {
            "type": "boolean",
            "description": "Whether to sync user profile attributes on each login"
          },
          "isMigrated": {
            "type": "boolean",
            "description": "Whether to migrate the users"
          },
          "codePayload": {
            "type": "string"
          }
        },
        "required": [
          "syncOnLogin",
          "isMigrated",
          "codePayload"
        ]
      },
      "CreateCustomCodeExternalUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "codePayload": {
                    "type": "string"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "codePayload"
                ]
              }
            ]
          },
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        },
        "required": [
          "name",
          "configuration",
          "index"
        ]
      },
      "FederationUserSourceConfig": {
        "type": "object",
        "properties": {
          "syncOnLogin": {
            "type": "boolean",
            "description": "Whether to sync user profile attributes on each login"
          },
          "wellknownUrl": {
            "type": "string",
            "description": "The url of the service provider"
          },
          "clientId": {
            "type": "string",
            "description": "The client id from the service provider"
          },
          "secret": {
            "type": "string",
            "description": "The secret from the service provider"
          },
          "tenantIdFieldName": {
            "type": "string",
            "description": "The tenant id field name in the ID Token from the service provider"
          }
        },
        "required": [
          "syncOnLogin",
          "wellknownUrl",
          "clientId",
          "secret",
          "tenantIdFieldName"
        ]
      },
      "CreateFederationUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "wellknownUrl": {
                    "type": "string",
                    "description": "The url of the service provider"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The client id from the service provider"
                  },
                  "secret": {
                    "type": "string",
                    "description": "The secret from the service provider"
                  },
                  "tenantIdFieldName": {
                    "type": "string",
                    "description": "The tenant id field name in the ID Token from the service provider"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "wellknownUrl",
                  "clientId",
                  "secret",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        },
        "required": [
          "name",
          "configuration",
          "index"
        ]
      },
      "UpdateExternalAuth0UserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "domain": {
                    "type": "string",
                    "description": "the auth0 domain"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "the auth0 application clientId"
                  },
                  "secret": {
                    "type": "string",
                    "description": "the auth0 application secret"
                  },
                  "tenantIdFieldName": {
                    "type": "string",
                    "description": "the tenant id field name in the user's app_metadata"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "domain",
                  "clientId",
                  "secret",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        }
      },
      "UpdateExternalCognitoUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "region": {
                    "type": "string",
                    "description": "The aws region of the cognito user pool"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The cognito app client id"
                  },
                  "userPoolId": {
                    "type": "string",
                    "description": "The id of the cognito user pool"
                  },
                  "accessKeyId": {
                    "type": "string",
                    "description": "The access key of the aws account"
                  },
                  "secretAccessKey": {
                    "type": "string",
                    "description": "The secret of the aws account"
                  },
                  "tenantIdFieldName": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string",
                    "description": "The cognito application client secret, required if the app client is configured with a client secret"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "region",
                  "clientId",
                  "userPoolId",
                  "accessKeyId",
                  "secretAccessKey",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        }
      },
      "UpdateExternalCustomCodeUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "isMigrated": {
                    "type": "boolean",
                    "description": "Whether to migrate the users"
                  },
                  "codePayload": {
                    "type": "string"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "isMigrated",
                  "codePayload"
                ]
              }
            ]
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        }
      },
      "UpdateFederationUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user source name"
          },
          "configuration": {
            "description": "User source configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "syncOnLogin": {
                    "type": "boolean",
                    "description": "Whether to sync user profile attributes on each login"
                  },
                  "wellknownUrl": {
                    "type": "string",
                    "description": "The url of the service provider"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The client id from the service provider"
                  },
                  "secret": {
                    "type": "string",
                    "description": "The secret from the service provider"
                  },
                  "tenantIdFieldName": {
                    "type": "string",
                    "description": "The tenant id field name in the ID Token from the service provider"
                  }
                },
                "required": [
                  "syncOnLogin",
                  "wellknownUrl",
                  "clientId",
                  "secret",
                  "tenantIdFieldName"
                ]
              }
            ]
          },
          "index": {
            "type": "number",
            "description": "The user source index"
          },
          "description": {
            "type": "string",
            "description": "The user source description"
          }
        }
      },
      "AssignApplicationsToUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userSourceId": {
            "type": "string",
            "description": "The user source id"
          }
        },
        "required": [
          "appIds",
          "userSourceId"
        ]
      },
      "UnassignApplicationsFromUserSourceRequestDTO": {
        "type": "object",
        "properties": {
          "appIds": {
            "description": "The application ids to assign to this user source",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userSourceId": {
            "type": "string",
            "description": "The user source id"
          }
        },
        "required": [
          "appIds",
          "userSourceId"
        ]
      },
      "CreateOrUpdateIpRestrictionConfigDto": {
        "type": "object",
        "properties": {
          "strategy": {
            "enum": [
              "ALLOW",
              "BLOCK"
            ],
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateOrUpdateIpRestrictionDto": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP or CIDR (v4 and v6 are supported)"
          },
          "description": {
            "type": "string"
          },
          "strategy": {
            "type": "string",
            "enum": [
              "ALLOW",
              "BLOCK"
            ]
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "ip",
          "strategy"
        ]
      },
      "DomainRestrictionsCreateRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "pattern": "domainRegex"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALLOW",
              "BLOCK"
            ]
          }
        },
        "required": [
          "domain",
          "type"
        ]
      },
      "DomainRestrictionsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "type": {
            "enum": [
              "ALLOW",
              "BLOCK"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "domain",
          "type"
        ]
      },
      "DomainRestrictionsConfigResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "listType": {
            "enum": [
              "ALLOW",
              "BLOCK"
            ],
            "type": "string"
          },
          "blockPublicDomains": {
            "type": "boolean"
          }
        },
        "required": [
          "active",
          "listType",
          "blockPublicDomains"
        ]
      },
      "DomainRestrictionsConfigUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "blockPublicDomains": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "ALLOW",
              "BLOCK"
            ]
          }
        },
        "required": [
          "active"
        ]
      },
      "DomainRestrictionsBulkRequestRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ALLOW",
              "BLOCK"
            ]
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "domainRegexString"
            }
          }
        },
        "required": [
          "type",
          "domains"
        ]
      },
      "CreateSmsVendorConfigRequest": {
        "type": "object",
        "properties": {
          "senderName": {
            "type": "string",
            "description": "The sender name will be used only when alphanumeric sender is supported in the recipient country. This is usually a phone number or the name of the sender, dependeing on what is configured on your Twilio account"
          },
          "accountId": {
            "type": "string",
            "description": "account ID"
          },
          "token": {
            "type": "string",
            "description": "token"
          }
        }
      },
      "SmsVendorConfigResponse": {
        "type": "object",
        "properties": {}
      },
      "SmsTemplateResponse": {
        "type": "object",
        "properties": {}
      },
      "CreateSmsTemplateRequest": {
        "type": "object",
        "properties": {}
      },
      "ActivateUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "recaptchaToken": {
            "type": "string"
          },
          "lastTermsCheck": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "token"
        ]
      },
      "UserMFAWebAuthnDeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "deviceType": {
            "type": "string",
            "enum": [
              "Platform",
              "CrossPlatform"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "deviceType",
          "name"
        ]
      },
      "UserMFAPhoneDeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "phoneNumber"
        ]
      },
      "UserMFAAuthenticatorAppResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "UserMFAEmailCodeResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserMFADevicesResponse": {
        "type": "object",
        "properties": {
          "webauthn": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "deviceType": {
                  "type": "string",
                  "enum": [
                    "Platform",
                    "CrossPlatform"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "deviceType",
                "name"
              ]
            }
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "phoneNumber"
              ]
            }
          },
          "authenticators": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        },
        "required": [
          "webauthn",
          "phones",
          "authenticators",
          "emails"
        ]
      },
      "AuthenticationResponseDto": {
        "type": "object",
        "properties": {
          "tokenType": {
            "type": "string",
            "default": "bearer"
          },
          "mfaRequired": {
            "type": "boolean"
          },
          "mfaToken": {
            "type": "string"
          },
          "mfaEnrolled": {
            "type": "boolean"
          },
          "mfaDevices": {
            "type": "object",
            "properties": {
              "webauthn": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "deviceType": {
                      "type": "string",
                      "enum": [
                        "Platform",
                        "CrossPlatform"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "deviceType",
                    "name"
                  ]
                }
              },
              "phones": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "phoneNumber"
                  ]
                }
              },
              "authenticators": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            },
            "required": [
              "webauthn",
              "phones",
              "authenticators",
              "emails"
            ]
          },
          "mfaStrategies": {
            "type": "object"
          },
          "qrCode": {
            "type": "string"
          },
          "recoveryCode": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "number"
          },
          "expires": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "isBreachedPassword": {
            "type": "boolean"
          }
        },
        "required": [
          "mfaRequired",
          "accessToken",
          "refreshToken",
          "expiresIn",
          "expires"
        ]
      },
      "GetActivateStrategyResponseDto": {
        "type": "object",
        "properties": {
          "shouldSetPassword": {
            "type": "boolean"
          }
        },
        "required": [
          "shouldSetPassword"
        ]
      },
      "AuthenticateUserPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {}
      },
      "AuthApiTokenDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "secret"
        ]
      },
      "ApiTokenAuthV2Response": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "number"
          },
          "expires": {
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "expires_in",
          "expires"
        ]
      },
      "RefreshApiTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "PasswordlessAuthenticationSmsOtcPreloginDto": {
        "type": "object",
        "properties": {
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "userId",
          "phoneNumber"
        ]
      },
      "PasswordlessAuthenticationSmsOTCPreloginResponseDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "resetPhoneNumberToken": {
            "type": "string"
          }
        }
      },
      "AuthenticateUserPasswordlessDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "One time code to login with - get it from the email sent after prelogin request"
          },
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "PasswordlessAuthenticationPreloginDto": {
        "type": "object",
        "properties": {
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "userId"
        ]
      },
      "VerifyMFAAuthAppRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "value",
          "mfaToken"
        ]
      },
      "AuthRequestVerifyMfaRequest": {
        "type": "object",
        "properties": {
          "mfaToken": {
            "type": "string"
          }
        },
        "required": [
          "mfaToken"
        ]
      },
      "VerifyMFAEmailOTCRequest": {
        "type": "object",
        "properties": {
          "otcToken": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "otcToken",
          "code",
          "mfaToken"
        ]
      },
      "AuthRequestEnrollMFARequest": {
        "type": "object",
        "properties": {
          "mfaToken": {
            "type": "string"
          }
        },
        "required": [
          "mfaToken"
        ]
      },
      "VerifyEnrollMFAAuthAppRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "token",
          "mfaToken"
        ]
      },
      "RequestEnrollMFASMSRequest": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "phoneNumberRegexp"
          }
        },
        "required": [
          "phoneNumber"
        ]
      },
      "VerifyEnrollMFASMSRequest": {
        "type": "object",
        "properties": {
          "otcToken": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "otcToken",
          "code"
        ]
      },
      "VerifyMFASMSRequest": {
        "type": "object",
        "properties": {
          "otcToken": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "otcToken",
          "code",
          "mfaToken"
        ]
      },
      "WebAuthNClientResponse": {
        "type": "object",
        "properties": {
          "clientDataJSON": {
            "type": "string"
          },
          "attestationObject": {
            "type": "string"
          }
        },
        "required": [
          "clientDataJSON",
          "attestationObject"
        ]
      },
      "VerifyNewWebAuthnDeviceRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "response": {
            "type": "object",
            "properties": {
              "clientDataJSON": {
                "type": "string"
              },
              "attestationObject": {
                "type": "string"
              }
            },
            "required": [
              "clientDataJSON",
              "attestationObject"
            ]
          },
          "deviceType": {
            "type": "string",
            "enum": [
              "Platform",
              "CrossPlatform"
            ]
          }
        },
        "required": [
          "id",
          "response"
        ]
      },
      "VerifyEnrollMFAWebAuthnRequest": {
        "type": "object",
        "properties": {
          "deviceType": {
            "type": "string",
            "enum": [
              "Platform",
              "CrossPlatform"
            ]
          },
          "webauthnToken": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "response": {
                "type": "object",
                "properties": {
                  "clientDataJSON": {
                    "type": "string"
                  },
                  "attestationObject": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientDataJSON",
                  "attestationObject"
                ]
              },
              "deviceType": {
                "type": "string",
                "enum": [
                  "Platform",
                  "CrossPlatform"
                ]
              }
            },
            "required": [
              "id",
              "response"
            ]
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "deviceType",
          "webauthnToken",
          "options",
          "mfaToken"
        ]
      },
      "WebAuthNResponse": {
        "type": "object",
        "properties": {
          "clientDataJSON": {
            "type": "string"
          },
          "authenticatorData": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "userHandle": {
            "type": "string"
          }
        },
        "required": [
          "clientDataJSON",
          "authenticatorData",
          "signature",
          "userHandle"
        ]
      },
      "AuthenticateUserWebAuthNDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "response": {
            "type": "object",
            "properties": {
              "clientDataJSON": {
                "type": "string"
              },
              "authenticatorData": {
                "type": "string"
              },
              "signature": {
                "type": "string"
              },
              "userHandle": {
                "type": "string"
              }
            },
            "required": [
              "clientDataJSON",
              "authenticatorData",
              "signature",
              "userHandle"
            ]
          },
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "response"
        ]
      },
      "VerifyMFAWebAuthnRequest": {
        "type": "object",
        "properties": {
          "webauthnToken": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "response": {
                "type": "object",
                "properties": {
                  "clientDataJSON": {
                    "type": "string"
                  },
                  "authenticatorData": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "string"
                  },
                  "userHandle": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientDataJSON",
                  "authenticatorData",
                  "signature",
                  "userHandle"
                ]
              },
              "recaptchaToken": {
                "type": "string"
              },
              "invitationToken": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "response"
            ]
          },
          "mfaToken": {
            "type": "string"
          },
          "rememberDevice": {
            "type": "boolean"
          }
        },
        "required": [
          "webauthnToken",
          "options",
          "mfaToken"
        ]
      },
      "CheckAllowRememberResponse": {
        "type": "object",
        "properties": {}
      },
      "RequestEnrollAuthenticatorAppMfaResponse": {
        "type": "object",
        "properties": {
          "qrCode": {
            "type": "string",
            "description": "QR code to be verified by authenticator app"
          }
        },
        "required": [
          "qrCode"
        ]
      },
      "VerifyEnrollMFAUserAuthAppRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "VerifyEnrollMFAResponse": {
        "type": "object",
        "properties": {
          "recoveryCode": {
            "type": "string"
          }
        },
        "required": [
          "recoveryCode"
        ]
      },
      "AcceptInvitationDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "token"
        ]
      },
      "SignUpUserDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": [
              "local",
              "saml",
              "google",
              "github",
              "facebook",
              "microsoft",
              "scim2",
              "slack",
              "apple"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "Stringified JSON object. Use the JSON.stringify() method."
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profilePictureUrl": {
            "type": "string",
            "maxLength": 4095
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "skipInviteEmail": {
            "type": "boolean"
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "emailMetadata": {
            "type": "object"
          },
          "companyName": {
            "type": "string"
          },
          "recaptchaToken": {
            "type": "string"
          },
          "invitationToken": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "email",
          "companyName"
        ]
      },
      "SignUpResponseDto": {
        "type": "object",
        "properties": {}
      },
      "UserTenantDataDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "tenantId",
          "name"
        ]
      },
      "GetUserTenantsHierarchyResponseDto": {
        "type": "object",
        "properties": {}
      },
      "MeAuthorizationResponseDto": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                },
                "tenantId": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "firstUserRole": {
                  "type": "boolean"
                },
                "level": {
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "id",
                "vendorId",
                "tenantId",
                "key",
                "name",
                "description",
                "isDefault",
                "firstUserRole",
                "level",
                "createdAt",
                "updatedAt",
                "permissions"
              ]
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "categoryId": {
                  "type": "string"
                },
                "fePermission": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "key",
                "name",
                "description",
                "createdAt",
                "updatedAt",
                "roleIds",
                "categoryId",
                "fePermission"
              ]
            }
          }
        },
        "required": [
          "roles",
          "permissions"
        ]
      },
      "GetUserTenantsResponseDto": {
        "type": "object",
        "properties": {}
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}